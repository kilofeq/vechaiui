{"version":3,"file":"radio-group.js","names":["RadioGroup","React","forwardRef","props","ref","onChange","name","color","size","defaultValue","inline","valueProp","value","children","rest","useRef","isControlled","current","useState","setValue","_value","rootRef","_onChange","event","target","fallbackName","useId","_name","validChildren","getValidChildren","clones","map","child","index","cx","cloneElement","checked","useImperativeHandle","focus","input","querySelector","__DEV__","displayName"],"sources":["../../src/radio-group.tsx"],"sourcesContent":["import { useId } from \"@reach/auto-id\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, getValidChildren, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\nimport { cloneElement, useImperativeHandle, useRef, useState } from \"react\";\n\nimport { RadioProps } from \"./radio\";\n\ninterface IRadioGroupProps extends DefaultProps {\n  /**\n   * The id of the radio group.\n   */\n  id?: string;\n  /**\n   * The name of the radio group. This prop is passed to each checbox\n   */\n  name?: string;\n  /**\n   * The content of the radio group. Must be the `Radio` component\n   */\n  children?: React.ReactNode;\n  /**\n   * The initial value of the radio group\n   */\n  defaultValue?: RadioProps[\"value\"];\n  /**\n   * The value of the radio group\n   */\n  value?: RadioProps[\"value\"];\n  /* Size of all wrapped radio */\n\n  size?: RadioProps[\"size\"];\n  /* Color of all wrapped radio */\n\n  color?: RadioProps[\"color\"];\n  /**\n   * The callback fired when any children Radio is checked or unchecked\n   */\n  onChange?: (\n    event: React.ChangeEvent<HTMLInputElement>,\n    value: RadioProps[\"value\"]\n  ) => void;\n  /**\n   * If `true`, the radio will aligned horizontally.\n   */\n  inline?: boolean;\n}\n\ntype RadioGroupElement = {\n  focus: () => void;\n} | undefined;\nexport type RadioGroupProps = IRadioGroupProps;\n\nexport const RadioGroup = React.forwardRef<RadioGroupElement, RadioGroupProps>(\n  (props, ref) => {\n    const {\n      onChange,\n      name,\n      color,\n      size,\n      defaultValue,\n      inline,\n      value: valueProp,\n      children,\n      ...rest\n    } = props;\n    const { current: isControlled } = useRef(valueProp != null);\n    const [value, setValue] = useState(defaultValue || null);\n    const _value = isControlled ? valueProp : value;\n\n    const rootRef = useRef<HTMLDivElement>(null);\n\n    const _onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (!isControlled) {\n        setValue(event.target.value);\n      }\n\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    };\n\n    // If no name is passed, we'll generate a random, unique name\n    const fallbackName = `radio-${useId()}`;\n    const _name = name || fallbackName;\n\n    const validChildren = getValidChildren(children);\n\n    const clones = validChildren.map((child, index) => {\n      return (\n        <div key={index} className={cx(inline ? \"inline-block\" : \"block\")}>\n          {cloneElement(child, {\n            size: child.props.size || size,\n            color: child.props.color || color,\n            name: _name,\n            onChange: _onChange,\n            checked: child.props.value === _value,\n          })}\n        </div>\n      );\n    });\n\n    // Calling focus() on the radiogroup should focus on the selected option or first enabled option\n    useImperativeHandle(\n      ref,\n      () => ({\n        focus: () => {\n          let input: HTMLInputElement | null = rootRef.current?.querySelector(\n            \"input:not(:disabled):checked\"\n          ) || null;\n\n          if (!input) {\n            input = rootRef.current?.querySelector(\"input:not(:disabled)\") || null;\n          }\n\n          if (input) {\n            input.focus();\n          }\n        },\n      }),\n      []\n    );\n\n    return (\n      <div ref={rootRef} role=\"radiogroup\" {...rest}>\n        {clones}\n      </div>\n    );\n  }\n);\n\nif (__DEV__) {\n  RadioGroup.displayName = \"RadioGroup\";\n}"],"mappings":"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"}