{"version":3,"file":"radio.js","names":["useFormControl","cx","__DEV__","React","useRadioClass","useRadioLabelClass","Radio","forwardRef","props","ref","id","name","value","ariaLabel","ariaLabelledBy","ariaDescribedby","color","defaultChecked","checked","size","onChange","children","className","rest","disabled","invalid","radioClasses","radioLabelClasses","undefined","displayName"],"sources":["../../src/radio.tsx"],"sourcesContent":["import { useFormControl } from \"@vechaiui/forms\";\nimport { cx, __DEV__ } from \"@vechaiui/utils\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport * as React from \"react\";\n\nimport { useRadioClass, useRadioLabelClass } from \"./styles\";\n\ninterface IRadioProps<T = HTMLInputElement> extends DefaultProps {\n  /* Makes radio disabled */\n  disabled?: React.InputHTMLAttributes<T>[\"disabled\"];\n  /* Makes radio invalid */\n  invalid?: boolean;\n  /* Makes radio required */\n  required?: React.InputHTMLAttributes<T>[\"required\"];\n  /* Makes radio readOnly */\n  readOnly?: React.InputHTMLAttributes<T>[\"readOnly\"];\n  /**\n   * If `true`, the radio will be initially checked.\n   */\n  defaultChecked?: boolean;\n  /**\n   * If `true`, the radio will be checked.\n   * You'll need to pass `onChange` to update it's value (since it's now controlled)\n   */\n  checked?: boolean;\n  /**\n   * The callback invoked when the checked state of the `radio` changes..\n   */\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  /* Radio id */\n  id?: string;\n  /* Radio name */\n  name?: string;\n  /* Radio value */\n  value?: string | number;\n  /* Size of the radio */\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\";\n  /* Set the radio color */\n  color?: string;\n  /**\n   * A11y: A label that describes the input\n   */\n  \"aria-label\"?: string;\n  /**\n   * A11y: The id of the element that describes the input\n   */\n  \"aria-describedby\"?: string;\n  /**\n   * A11y: Refers to the id of the element that labels the radio element.\n   */\n  \"aria-labelledby\"?: string;\n  /**\n   * The children is the label to be displayed to the right of the radio.\n   */\n  children?: React.ReactNode;\n}\n\nexport type RadioProps = IRadioProps &\n  React.HTMLAttributes<HTMLInputElement>;\n\nexport const Radio = React.forwardRef<HTMLInputElement, RadioProps>((props, ref) => {\n  const {\n    id,\n    name,\n    value,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-describedby\": ariaDescribedby,\n    color = \"primary\",\n    defaultChecked,\n    checked,\n    size = \"md\",\n    onChange,\n    children,\n    className,\n    ...rest\n  } = props;\n\n  const {\n    disabled,\n    invalid,\n  } = useFormControl(props);\n\n  const radioClasses = useRadioClass({\n    size,\n    disabled,\n    color,\n  });\n\n  const radioLabelClasses = useRadioLabelClass({ size });\n\n  return (\n    <label\n      className={cx(\n        \"inline-flex align-top items-center\",\n        disabled && \"cursor-not-allowed\"\n      )}\n    >\n      <input\n        type=\"radio\"\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedby}\n        id={id}\n        ref={ref}\n        name={name}\n        value={value}\n        aria-invalid={invalid}\n        defaultChecked={defaultChecked}\n        onChange={onChange}\n        checked={checked}\n        disabled={disabled}\n        aria-disabled={disabled}\n        data-color={color ? color : undefined}\n        className={cx(\n          radioClasses,\n          disabled ? \"opacity-80\" : \"opacity-100\",\n          className\n        )}\n        {...rest}\n      />\n      {children && (\n        <span\n          className={cx(\n            radioLabelClasses,\n            disabled ? \"opacity-40\" : \"opacity-100\"\n          )}\n        >\n          {children}\n        </span>\n      )}\n    </label>\n  );\n});\n\nif (__DEV__) {\n  Radio.displayName = \"Radio\";\n}\n"],"mappings":";;;AAAA,SAASA,cAAc,QAAQ,iBAAiB;AAChD,SAASC,EAAE,EAAEC,OAAO,QAAQ,iBAAiB;AAE7C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,aAAa,EAAEC,kBAAkB,QAAQ,UAAU;AAuD5D,OAAO,IAAMC,KAAK,gBAAGH,KAAK,CAACI,UAAU,CAA+B,CAACC,KAAK,EAAEC,GAAG,KAAK;EAClF,IAAM;MACJC,EAAE;MACFC,IAAI;MACJC,KAAK;MACL,YAAY,EAAEC,SAAS;MACvB,iBAAiB,EAAEC,cAAc;MACjC,kBAAkB,EAAEC,eAAe;MACnCC,KAAK,GAAG,SAAS;MACjBC,cAAc;MACdC,OAAO;MACPC,IAAI,GAAG,IAAI;MACXC,QAAQ;MACRC,QAAQ;MACRC;IAEF,CAAC,GAAGd,KAAK;IADJe,IAAI,iCACLf,KAAK;EAET,IAAM;IACJgB,QAAQ;IACRC;EACF,CAAC,GAAGzB,cAAc,CAACQ,KAAK,CAAC;EAEzB,IAAMkB,YAAY,GAAGtB,aAAa,CAAC;IACjCe,IAAI;IACJK,QAAQ;IACRR;EACF,CAAC,CAAC;EAEF,IAAMW,iBAAiB,GAAGtB,kBAAkB,CAAC;IAAEc;EAAK,CAAC,CAAC;EAEtD,oBACE;IACE,SAAS,EAAElB,EAAE,CACX,oCAAoC,EACpCuB,QAAQ,IAAI,oBAAoB;EAChC,gBAEF;IACE,IAAI,EAAC,OAAO;IACZ,cAAYX,SAAU;IACtB,mBAAiBC,cAAe;IAChC,oBAAkBC,eAAgB;IAClC,EAAE,EAAEL,EAAG;IACP,GAAG,EAAED,GAAI;IACT,IAAI,EAAEE,IAAK;IACX,KAAK,EAAEC,KAAM;IACb,gBAAca,OAAQ;IACtB,cAAc,EAAER,cAAe;IAC/B,QAAQ,EAAEG,QAAS;IACnB,OAAO,EAAEF,OAAQ;IACjB,QAAQ,EAAEM,QAAS;IACnB,iBAAeA,QAAS;IACxB,cAAYR,KAAK,GAAGA,KAAK,GAAGY,SAAU;IACtC,SAAS,EAAE3B,EAAE,CACXyB,YAAY,EACZF,QAAQ,GAAG,YAAY,GAAG,aAAa,EACvCF,SAAS;EACT,GACEC,IAAI,EACR,EACDF,QAAQ,iBACP;IACE,SAAS,EAAEpB,EAAE,CACX0B,iBAAiB,EACjBH,QAAQ,GAAG,YAAY,GAAG,aAAa;EACvC,GAEDH,QAAQ,CAEZ,CACK;AAEZ,CAAC,CAAC;AAEF,IAAInB,OAAO,EAAE;EACXI,KAAK,CAACuB,WAAW,GAAG,OAAO;AAC7B"}