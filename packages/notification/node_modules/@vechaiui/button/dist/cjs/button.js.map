{"version":3,"sources":["../../src/button.tsx"],"names":["Button","React","forwardRef","props","ref","_disabled","disabled","loading","active","loadingText","type","leftIcon","rightIcon","children","className","color","variant","size","rest","classes","undefined","__DEV__","displayName"],"mappings":";;;;;AAAA;;AAEA;;AACA;;AAEA;;;;;;;;;;;;AA+BO,IAAMA,MAAM,gBAAGC,KAAK,CAACC,UAAN,CACpB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACd,MACYC,SADZ,GAcIF,KAdJ,CACEG,QADF;AAAA,MAEEC,OAFF,GAcIJ,KAdJ,CAEEI,OAFF;AAAA,MAGEC,MAHF,GAcIL,KAdJ,CAGEK,MAHF;AAAA,MAIEC,WAJF,GAcIN,KAdJ,CAIEM,WAJF;AAAA,MAKEC,IALF,GAcIP,KAdJ,CAKEO,IALF;AAAA,MAMEC,QANF,GAcIR,KAdJ,CAMEQ,QANF;AAAA,MAOEC,SAPF,GAcIT,KAdJ,CAOES,SAPF;AAAA,MAQEC,QARF,GAcIV,KAdJ,CAQEU,QARF;AAAA,MASEC,SATF,GAcIX,KAdJ,CASEW,SATF;AAAA,MAUEC,KAVF,GAcIZ,KAdJ,CAUEY,KAVF;AAAA,uBAcIZ,KAdJ,CAWEa,OAXF;AAAA,MAWEA,OAXF,+BAWY,SAXZ;AAAA,oBAcIb,KAdJ,CAYEc,IAZF;AAAA,MAYEA,IAZF,4BAYS,IAZT;AAAA,MAaKC,IAbL,iCAcIf,KAdJ;;AAgBA,MAAMG,QAAQ,GAAGD,SAAS,IAAIE,OAA9B;AACA,MAAMY,OAAO,GAAG,4BAAe;AAC7BH,IAAAA,OAAO,EAAPA,OAD6B;AAE7BC,IAAAA,IAAI,EAAJA,IAF6B;AAG7BX,IAAAA,QAAQ,EAARA;AAH6B,GAAf,CAAhB;AAMA,sBACE;AACE,IAAA,GAAG,EAAEF,GADP;AAEE,IAAA,QAAQ,EAAEE,QAFZ;AAGE,qBAAeA,QAHjB;AAIE,IAAA,IAAI,EAAEI,IAJR;AAKE,mBAAaF,MAAM,GAAG,MAAH,GAAYY,SALjC;AAME,kBAAYL,KAAK,GAAGA,KAAH,GAAWK,SAN9B;AAOE,IAAA,SAAS,EAAE,eAAGD,OAAH,EAAYL,SAAZ;AAPb,KAQMI,IARN,GAUGP,QAAQ,IAAI,CAACJ,OAAb,GAAuBI,QAAvB,GAAkC,IAVrC,EAWGJ,OAAO,iBACN,oBAAC,gBAAD;AACE,IAAA,SAAS,EAAE,eACTE,WAAW,GAAG,UAAH,GAAgB,UADlB,EAETA,WAAW,YAAY,MAFd,CADb;AAKE,IAAA,IAAI,EAAC;AALP,IAZJ,EAoBGF,OAAO,GACJE,WAAW,iBAAI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA6BI,QAA7B,CADX,GAEJA,QAtBN,EAuBGD,SAAS,IAAI,CAACL,OAAd,GAAwBK,SAAxB,GAAoC,IAvBvC,CADF;AA2BD,CApDmB,CAAf;;;AAuDP,IAAIS,cAAJ,EAAa;AACXrB,EAAAA,MAAM,CAACsB,WAAP,GAAqB,QAArB;AACD","sourcesContent":["import { Spinner } from \"@vechaiui/spinner\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\n\nimport { useButtonClass } from \"./styles\";\n\ninterface IButtonProps extends DefaultProps {\n  /* Shows loading spinner */\n  loading?: boolean;\n  /* Makes button disabled */\n  disabled?: boolean;\n  /* Makes button active */\n  active?: boolean;\n  /* The label to show in the button when loading is true */\n  loadingText?: string;\n  /* Set the original html type of button */\n  type?: \"button\" | \"reset\" | \"submit\";\n  /* Adds icon before button label */\n  leftIcon?: React.ReactElement;\n  /* Adds icon after button label */\n  rightIcon?: React.ReactElement;\n  /* Set the button color */\n  color?: string;\n  /* Size of the button */\n  size?: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\n  /** Controls button appearance */\n  variant?: \"link\" | \"solid\" | \"outline\" | \"light\" | \"ghost\";\n  /* React node */\n  children?: React.ReactNode;\n}\n\nexport interface ButtonProps\n  extends React.HTMLAttributes<HTMLButtonElement>,\n    IButtonProps {}\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (props, ref) => {\n    const {\n      disabled: _disabled,\n      loading,\n      active,\n      loadingText,\n      type,\n      leftIcon,\n      rightIcon,\n      children,\n      className,\n      color,\n      variant = \"outline\",\n      size = \"md\",\n      ...rest\n    } = props;\n\n    const disabled = _disabled || loading;\n    const classes = useButtonClass({\n      variant,\n      size,\n      disabled,\n    });\n\n    return (\n      <button\n        ref={ref}\n        disabled={disabled}\n        aria-disabled={disabled}\n        type={type}\n        data-active={active ? \"true\" : undefined}\n        data-color={color ? color : undefined}\n        className={cx(classes, className)}\n        {...rest}\n      >\n        {leftIcon && !loading ? leftIcon : null}\n        {loading && (\n          <Spinner\n            className={cx(\n              loadingText ? \"relative\" : \"absolute\",\n              loadingText ? `mr-2` : \"mr-0\"\n            )}\n            size=\"sm\"\n          />\n        )}\n        {loading\n          ? loadingText || <span className=\"opacity-0\">{children}</span>\n          : children}\n        {rightIcon && !loading ? rightIcon : null}\n      </button>\n    );\n  }\n);\n\nif (__DEV__) {\n  Button.displayName = \"Button\";\n}\n"],"file":"button.js"}