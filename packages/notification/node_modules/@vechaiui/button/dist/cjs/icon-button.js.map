{"version":3,"sources":["../../src/icon-button.tsx"],"names":["IconButton","React","forwardRef","props","ref","icon","children","ariaLabel","className","rest","classes","element","_children","isValidElement","cloneElement","__DEV__","displayName"],"mappings":";;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;AAoBO,IAAMA,UAAU,gBAAGC,KAAK,CAACC,UAAN,CACxB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACd,MACEC,IADF,GAMIF,KANJ,CACEE,IADF;AAAA,MAEEC,QAFF,GAMIH,KANJ,CAEEG,QAFF;AAAA,MAGgBC,SAHhB,GAMIJ,KANJ,CAGE,YAHF;AAAA,MAIEK,SAJF,GAMIL,KANJ,CAIEK,SAJF;AAAA,MAKKC,IALL,iCAMIN,KANJ;;AAQA,MAAMO,OAAO,GAAG,eAAG,UAAH,EAAeF,SAAf,CAAhB;AAEA;AACJ;AACA;;AACI,MAAMG,OAAO,GAAGN,IAAI,IAAIC,QAAxB;;AACA,MAAMM,SAAS,GAAG,aAAAX,KAAK,CAACY,cAAN,CAAqBF,OAArB,iBACdV,KAAK,CAACa,YAAN,CAAmBH,OAAnB,EAAmC,EAAnC,CADc,GAEd,IAFJ;;AAIA,sBACE,oBAAC,cAAD;AAAQ,IAAA,SAAS,EAAED,OAAnB;AAA4B,IAAA,GAAG,EAAEN,GAAjC;AAAsC,kBAAYG;AAAlD,KAAiEE,IAAjE,GACGG,SADH,CADF;AAKD,CAzBuB,CAAnB;;;AA4BP,IAAIG,cAAJ,EAAa;AACXf,EAAAA,UAAU,CAACgB,WAAX,GAAyB,YAAzB;AACD","sourcesContent":["import { cx, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\n\nimport { Button, ButtonProps } from \"./button\";\n\ntype OmittedProps = \"leftIcon\" | \"rightIcon\" | \"loadingText\";\n\ninterface IIconButtonProps extends Omit<ButtonProps, OmittedProps> {\n  /**\n   * The icon to be used in the button.\n   */\n  icon?: React.ReactElement;\n}\n\nexport interface IconButtonProps\n  extends React.HTMLAttributes<HTMLButtonElement>,\n    IIconButtonProps {\n  /**\n   * A11y: A label that describes the button\n   */\n  \"aria-label\"?: string;\n}\n\nexport const IconButton = React.forwardRef<HTMLButtonElement, IconButtonProps>(\n  (props, ref) => {\n    const {\n      icon,\n      children,\n      \"aria-label\": ariaLabel,\n      className,\n      ...rest\n    } = props;\n\n    const classes = cx(\"btn-icon\", className);\n\n    /**\n     * Passing the icon as prop or children should work\n     */\n    const element = icon || children;\n    const _children = React.isValidElement(element)\n      ? React.cloneElement(element as any, {})\n      : null;\n\n    return (\n      <Button className={classes} ref={ref} aria-label={ariaLabel} {...rest}>\n        {_children}\n      </Button>\n    );\n  }\n);\n\nif (__DEV__) {\n  IconButton.displayName = \"IconButton\";\n}\n"],"file":"icon-button.js"}