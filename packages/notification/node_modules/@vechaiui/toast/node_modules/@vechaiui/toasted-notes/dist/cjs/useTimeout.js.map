{"version":3,"sources":["../../src/useTimeout.ts"],"names":["useTimeout","callback","delay","savedCallback","React","useRef","useEffect","current","tick","id","setTimeout","clearTimeout"],"mappings":";;;;;AAAA;;;;;;AAIO,SAASA,UAAT,CAAoBC,QAApB,EAAwCC,KAAxC,EAA8D;AACnE,MAAMC,aAAa,GAAGC,KAAK,CAACC,MAAN,EAAtB,CADmE,CAGnE;;AACAD,EAAAA,KAAK,CAACE,SAAN,CAAgB,YAAM;AACpBH,IAAAA,aAAa,CAACI,OAAd,GAAwBN,QAAxB;AACD,GAFD,EAEG,CAACA,QAAD,CAFH,EAJmE,CAQnE;;AACAG,EAAAA,KAAK,CAACE,SAAN,CAAgB,YAAM;AACpB,aAASE,IAAT,GAAgB;AACd,UAAIL,aAAa,CAACI,OAAlB,EAA2B;AACzBJ,QAAAA,aAAa,CAACI,OAAd;AACD;AACF;;AACD,QAAIL,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAIO,EAAE,GAAGC,UAAU,CAACF,IAAD,EAAON,KAAP,CAAnB;AACA,aAAO;AAAA,eAAMS,YAAY,CAACF,EAAD,CAAlB;AAAA,OAAP;AACD;AACF,GAVD,EAUG,CAACP,KAAD,CAVH;AAWD","sourcesContent":["import * as React from \"react\";\n\ntype Callback = () => void;\n\nexport function useTimeout(callback: Callback, delay: number | null) {\n  const savedCallback = React.useRef<Callback | null>();\n\n  // Remember the latest callback.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      if (savedCallback.current) {\n        savedCallback.current();\n      }\n    }\n    if (delay !== null) {\n      let id = setTimeout(tick, delay);\n      return () => clearTimeout(id);\n    }\n  }, [delay]);\n}\n"],"file":"useTimeout.js"}