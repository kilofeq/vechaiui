{"version":3,"sources":["../../src/Toast.tsx"],"names":["isBrowser","window","document","PORTAL_ID","Toaster","createNotification","removeAll","closeToast","closeAll","bindNotify","fn","notify","message","options","close","id","position","portalElement","existingPortalElement","getElementById","el","createElement","className","body","appendChild","ReactDOM","render"],"mappings":";;;;;AAAA;;AACA;;AACA;;;;;;;;AAGA,IAAMA,SAAS,GACb,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACC,QAAd,KAA2B,WAD9D;AAEA,IAAMC,SAAS,GAAG,aAAlB;;IAEMC,O,GAKJ,mBAAc;AAAA;;AAAA,OAJdC,kBAIc;AAAA,OAHdC,SAGc;AAAA,OAFdC,UAEc;;AAAA,OA0BdC,QA1Bc,GA0BH,YAAM;AACf,QAAI,KAAI,CAACF,SAAT,EAAoB;AAClB,MAAA,KAAI,CAACA,SAAL;AACD;AACF,GA9Ba;;AAAA,OAgCdG,UAhCc,GAgCD,UAACC,EAAD,EAAeJ,SAAf,EAAoCC,UAApC,EAA6D;AACxE,IAAA,KAAI,CAACF,kBAAL,GAA0BK,EAA1B;AACA,IAAA,KAAI,CAACJ,SAAL,GAAiBA,SAAjB;AACA,IAAA,KAAI,CAACC,UAAL,GAAkBA,UAAlB;AACD,GApCa;;AAAA,OAsCdI,MAtCc,GAsCL,UAACC,OAAD,EAAuBC,OAAvB,EAAgE;AAAA,QAAzCA,OAAyC;AAAzCA,MAAAA,OAAyC,GAAP,EAAO;AAAA;;AACvE,QAAI,KAAI,CAACR,kBAAT,EAA6B;AAC3B,aAAO,KAAI,CAACA,kBAAL,CAAwBO,OAAxB,EAAiCC,OAAjC,CAAP;AACD;AACF,GA1Ca;;AAAA,OA4CdC,KA5Cc,GA4CN,UAACC,EAAD,EAAaC,QAAb,EAAyC;AAC/C,QAAG,KAAI,CAACT,UAAR,EAAmB;AACjB,MAAA,KAAI,CAACA,UAAL,CAAgBQ,EAAhB,EAAoBC,QAApB;AACD;AACF,GAhDa;;AACZ,MAAI,CAAChB,SAAL,EAAgB;AACd;AACD;;AAED,MAAIiB,aAAJ;AACA,MAAMC,qBAAqB,GAAGhB,QAAQ,CAACiB,cAAT,CAAwBhB,SAAxB,CAA9B;;AAEA,MAAIe,qBAAJ,EAA2B;AACzBD,IAAAA,aAAa,GAAGC,qBAAhB;AACD,GAFD,MAEO;AACL,QAAME,EAAE,GAAGlB,QAAQ,CAACmB,aAAT,CAAuB,KAAvB,CAAX;AACAD,IAAAA,EAAE,CAACL,EAAH,GAAQZ,SAAR;AACAiB,IAAAA,EAAE,CAACE,SAAH,GAAe,SAAf;;AACA,QAAIpB,QAAQ,CAACqB,IAAT,IAAiB,IAArB,EAA2B;AACzBrB,MAAAA,QAAQ,CAACqB,IAAT,CAAcC,WAAd,CAA0BJ,EAA1B;AACD;;AACDH,IAAAA,aAAa,GAAGG,EAAhB;AACD;;AAEDK,EAAAA,QAAQ,CAACC,MAAT,eACE,oBAAC,wBAAD;AAAc,IAAA,MAAM,EAAE,KAAKjB;AAA3B,IADF,EAEEQ,aAFF;AAID,C;;eA2BYb,O","sourcesContent":["import * as ReactDOM from \"react-dom\";\nimport * as React from \"react\";\nimport ToastManager, { MessageOptionalOptions } from \"./ToastManager\";\nimport { MessageProp, PositionsType } from \"./Message\";\n\nconst isBrowser =\n  typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nconst PORTAL_ID = \"react-toast\";\n\nclass Toaster {\n  createNotification?: Function;\n  removeAll?: Function;\n  closeToast?: Function;\n\n  constructor() {\n    if (!isBrowser) {\n      return;\n    }\n\n    let portalElement;\n    const existingPortalElement = document.getElementById(PORTAL_ID);\n\n    if (existingPortalElement) {\n      portalElement = existingPortalElement;\n    } else {\n      const el = document.createElement(\"div\");\n      el.id = PORTAL_ID;\n      el.className = \"Toaster\";\n      if (document.body != null) {\n        document.body.appendChild(el);\n      }\n      portalElement = el;\n    }\n\n    ReactDOM.render(\n      <ToastManager notify={this.bindNotify as any} />,\n      portalElement\n    );\n  }\n\n  closeAll = () => {\n    if (this.removeAll) {\n      this.removeAll();\n    }\n  };\n\n  bindNotify = (fn: Function, removeAll: Function, closeToast: Function) => {\n    this.createNotification = fn;\n    this.removeAll = removeAll;\n    this.closeToast = closeToast;\n  };\n\n  notify = (message: MessageProp, options: MessageOptionalOptions = {}) => {\n    if (this.createNotification) {\n      return this.createNotification(message, options);\n    }\n  };\n\n  close = (id: number, position: PositionsType) => {\n    if(this.closeToast){\n      this.closeToast(id, position);\n    }\n  }\n}\n\nexport default Toaster;\n"],"file":"Toast.js"}