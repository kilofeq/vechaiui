{"version":3,"sources":["../../../src/create-theme-vars/to-css-var.ts"],"names":["createThemeVars","extractTokens","omitVars","toCSSVar","rawTheme","theme","tokens","cssVarPrefix","config","cssMap","cssVars","Object","assign","__cssVars","__cssMap"],"mappings":"AAEA,SAASA,eAAT,QAAgC,qBAAhC;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,gBAAxC;AAEA,OAAO,SAASC,QAAT,CAAkCC,QAAlC,EAA+C;AAAA;;AACpD;AACF;AACA;AACA;AACE,MAAMC,KAAK,GAAGH,QAAQ,CAACE,QAAD,CAAtB,CALoD,CAOpD;;AACA,MAAME,MAAM,GAAGL,aAAa,CAACI,KAAD,CAA5B;AAEA,MAAME,YAAY,GAAG,kBAAAF,KAAK,CAACG,MAAN,mCAAcD,YAAd,KAA8B,IAAnD;AAEA,MAAM;AACJ;AACJ;AACA;AACA;AACIE,IAAAA,MALI;;AAMJ;AACJ;AACA;AACA;AACIC,IAAAA;AAVI,MAWFV,eAAe,CAACM,MAAD,EAAS;AAAEC,IAAAA;AAAF,GAAT,CAXnB;AAaAI,EAAAA,MAAM,CAACC,MAAP,CAAcP,KAAd,EAAqB;AACnBQ,IAAAA,SAAS,EAAEH,OADQ;AAEnBI,IAAAA,QAAQ,EAAEL;AAFS,GAArB;AAKA,SAAOJ,KAAP;AACD","sourcesContent":["import type { WithCSSVar, Dict } from \"@vechaiui/utils\";\n\nimport { createThemeVars } from \"./create-theme-vars\";\nimport { extractTokens, omitVars } from \"./theme-tokens\";\n\nexport function toCSSVar<T extends Dict>(rawTheme: T) {\n  /**\n   * In the case the theme has already been converted to css-var (e.g extending the theme),\n   * we can omit the computed css vars and recompute it for the extended theme.\n   */\n  const theme = omitVars(rawTheme);\n\n  // omit components and breakpoints from css variable map\n  const tokens = extractTokens(theme);\n\n  const cssVarPrefix = theme.config?.cssVarPrefix || \"vc\";\n\n  const {\n    /**\n     * This is more like a dictionary of tokens users will type `green.500`,\n     * and their equivalent css variable.\n     */\n    cssMap,\n    /**\n     * The extracted css variables will be stored here, and used in\n     * the emotion's <Global/> component to attach variables to `:root`\n     */\n    cssVars,\n  } = createThemeVars(tokens, { cssVarPrefix });\n\n  Object.assign(theme, {\n    __cssVars: cssVars,\n    __cssMap: cssMap,\n  });\n\n  return theme as WithCSSVar<T>;\n}\n"],"file":"to-css-var.js"}