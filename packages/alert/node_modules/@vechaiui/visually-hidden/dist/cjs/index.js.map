{"version":3,"sources":["../../src/index.tsx"],"names":["VisuallyHidden","React","forwardRef","ref","as","Comp","style","props","border","clip","height","margin","overflow","padding","position","width","whiteSpace","wordWrap","__DEV__","displayName","propTypes","PropTypes","any","children","node"],"mappings":";;;;;AAYC;;AACA;;AACA;;;;;;;;;;;;;;AAEA;AACD;AACA;AACA;AACA;AACA;AACC,IAAMA,cAAc,gBAAGC,KAAK,CAACC,UAAN,CAA2B,SAASF,cAAT,OAEhDG,GAFgD,EAGhD;AAAA,qBAFEC,EAEF;AAAA,MAFMC,IAEN,wBAFa,MAEb;AAAA,wBAFqBC,KAErB;AAAA,MAFqBA,KAErB,2BAF6B,EAE7B;AAAA,MAFoCC,KAEpC;;AACA,sBACE,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEJ,GADP;AAEE,IAAA,KAAK;AACHK,MAAAA,MAAM,EAAE,CADL;AAEHC,MAAAA,IAAI,EAAE,eAFH;AAGHC,MAAAA,MAAM,EAAE,KAHL;AAIHC,MAAAA,MAAM,EAAE,MAJL;AAKHC,MAAAA,QAAQ,EAAE,QALP;AAMHC,MAAAA,OAAO,EAAE,CANN;AAOHC,MAAAA,QAAQ,EAAE,UAPP;AAQHC,MAAAA,KAAK,EAAE,KARJ;AAUH;AACAC,MAAAA,UAAU,EAAE,QAXT;AAYHC,MAAAA,QAAQ,EAAE;AAZP,OAaAX,KAbA;AAFP,KAiBMC,KAjBN,EADF;AAqBD,CAzBsB,CAAvB;AA2BA;AACD;AACA;;;;AAQC,IAAIW,cAAJ,EAAa;AACXlB,EAAAA,cAAc,CAACmB,WAAf,GAA6B,gBAA7B;AACAnB,EAAAA,cAAc,CAACoB,SAAf,GAA2B;AACzBhB,IAAAA,EAAE,EAAEiB,sBAAUC,GADW;AAEzBC,IAAAA,QAAQ,EAAEF,sBAAUG;AAFK,GAA3B;AAID,C,CAED;AACA;;;eAIexB,c","sourcesContent":["/**\n * Welcome to @reach/visually-hidden!\n *\n * Provides text for screen readers that is visually hidden.\n * It is the logical opposite of the `aria-hidden` attribute.\n *\n * @see https://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n * @see https://a11yproject.com/posts/how-to-hide-content/\n * @see Docs     https://reach.tech/visually-hidden\n * @see Source   https://github.com/reach/reach-ui/tree/main/packages/visually-hidden\n */\n\n import * as React from \"react\";\n import { __DEV__ } from \"@vechaiui/utils\";\n import PropTypes from \"prop-types\";\n \n /**\n  * VisuallyHidden\n  *\n  * Provides text for screen readers that is visually hidden.\n  * It is the logical opposite of the `aria-hidden` attribute.\n  */\n const VisuallyHidden = React.forwardRef<any, any>(function VisuallyHidden(\n   { as: Comp = \"span\", style = {}, ...props },\n   ref\n ) {\n   return (\n     <Comp\n       ref={ref}\n       style={{\n         border: 0,\n         clip: \"rect(0 0 0 0)\",\n         height: \"1px\",\n         margin: \"-1px\",\n         overflow: \"hidden\",\n         padding: 0,\n         position: \"absolute\",\n         width: \"1px\",\n \n         // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n         whiteSpace: \"nowrap\",\n         wordWrap: \"normal\",\n         ...style,\n       }}\n       {...props}\n     />\n   );\n });\n \n /**\n  * @see Docs https://reach.tech/visually-hidden#visuallyhidden-props\n  */\n interface VisuallyHiddenProps {\n   /**\n    * @see Docs https://reach.tech/visually-hidden#visuallyhidden-children\n    */\n   children?: React.ReactNode;\n }\n \n if (__DEV__) {\n   VisuallyHidden.displayName = \"VisuallyHidden\";\n   VisuallyHidden.propTypes = {\n     as: PropTypes.any,\n     children: PropTypes.node,\n   };\n }\n \n ////////////////////////////////////////////////////////////////////////////////\n // Exports\n \n export type { VisuallyHiddenProps };\n export { VisuallyHidden };\n export default VisuallyHidden;"],"file":"index.js"}