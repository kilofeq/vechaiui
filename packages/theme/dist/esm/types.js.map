{"version":3,"file":"types.js","names":[],"sources":["../../src/types.ts"],"sourcesContent":["import { DeepPartial } from \"@vechaiui/utils\";\n\nexport type RecursiveProperty<Nested = string | number> =\n  | RecursiveObject<Nested>\n  | Nested\nexport interface RecursiveObject<Nested = string | number> {\n  [property: string]: RecursiveProperty<Nested>\n}\nexport interface ColorHues {\n  50: string\n  100: string\n  200: string\n  300: string\n  400: string\n  500: string\n  600: string\n  700: string\n  800: string\n  900: string\n}\n\nexport type Colors = RecursiveObject<\n  Record<string, Partial<ColorHues>> | string\n>\nexport interface ColorScheme {\n  id: string;\n  type: \"light\" | \"dark\";\n  colors: {\n    bg: {\n      base: string;\n      fill: string;\n    };\n    text: {\n      foreground: string;\n      muted: string;\n    };\n    primary: ColorHues;\n    neutral: ColorHues;\n  } & Colors;\n}\n\nexport interface Density {}\nexport interface VechaiTheme {\n  readonly cursor: \"default\" | \"pointer\";\n  readonly rounded: string;\n  readonly colorSchemes: Record<string, ColorScheme>;\n  readonly density: Record<\"compact\" | \"comfortable\" | \"unset\", Density>;\n  readonly config: Record<string, unknown>;\n}\n\nexport interface DefaultProps {\n  className?: string;\n}\n\nexport type VechaiThemeOverride = DeepPartial<VechaiTheme>;\n"],"mappings":""}