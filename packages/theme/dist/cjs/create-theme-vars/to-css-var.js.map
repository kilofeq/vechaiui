{"version":3,"file":"to-css-var.js","names":["toCSSVar","rawTheme","theme","omitVars","tokens","extractTokens","cssVarPrefix","config","createThemeVars","cssMap","cssVars","Object","assign","__cssVars","__cssMap"],"sources":["../../../src/create-theme-vars/to-css-var.ts"],"sourcesContent":["import type { WithCSSVar, Dict } from \"@vechaiui/utils\";\n\nimport { createThemeVars } from \"./create-theme-vars\";\nimport { extractTokens, omitVars } from \"./theme-tokens\";\n\nexport function toCSSVar<T extends Dict>(rawTheme: T) {\n  /**\n   * In the case the theme has already been converted to css-var (e.g extending the theme),\n   * we can omit the computed css vars and recompute it for the extended theme.\n   */\n  const theme = omitVars(rawTheme);\n\n  // omit components and breakpoints from css variable map\n  const tokens = extractTokens(theme);\n\n  const cssVarPrefix = theme.config?.cssVarPrefix || \"vc\";\n\n  const {\n    /**\n     * This is more like a dictionary of tokens users will type `green.500`,\n     * and their equivalent css variable.\n     */\n    cssMap,\n    /**\n     * The extracted css variables will be stored here, and used in\n     * the emotion's <Global/> component to attach variables to `:root`\n     */\n    cssVars,\n  } = createThemeVars(tokens, { cssVarPrefix });\n\n  Object.assign(theme, {\n    __cssVars: cssVars,\n    __cssMap: cssMap,\n  });\n\n  return theme as WithCSSVar<T>;\n}\n"],"mappings":";;;;AAEA;AACA;AAEO,SAASA,QAAQ,CAAiBC,QAAW,EAAE;EAAA;EACpD;AACF;AACA;AACA;EACE,IAAMC,KAAK,GAAG,IAAAC,qBAAQ,EAACF,QAAQ,CAAC;;EAEhC;EACA,IAAMG,MAAM,GAAG,IAAAC,0BAAa,EAACH,KAAK,CAAC;EAEnC,IAAMI,YAAY,GAAG,kBAAAJ,KAAK,CAACK,MAAM,qBAAZ,cAAcD,YAAY,KAAI,IAAI;EAEvD,uBAWI,IAAAE,iCAAe,EAACJ,MAAM,EAAE;MAAEE,YAAY,EAAZA;IAAa,CAAC,CAAC;IAN3CG,MAAM,oBAANA,MAAM;IAKNC,OAAO,oBAAPA,OAAO;EAGTC,MAAM,CAACC,MAAM,CAACV,KAAK,EAAE;IACnBW,SAAS,EAAEH,OAAO;IAClBI,QAAQ,EAAEL;EACZ,CAAC,CAAC;EAEF,OAAOP,KAAK;AACd"}