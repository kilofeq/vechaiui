{"version":3,"file":"toast.js","names":["toaster","React","useCallback","createToast","Comp","notify","position","duration","render","rest","options","onClose","id"],"sources":["../../src/toast.tsx"],"sourcesContent":["import { toaster, Position } from \"../../toasted-notes\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport * as React from \"react\";\nimport { useCallback } from \"react\";\n\ninterface IToast extends DefaultProps {\n  /**\n   * The title of the toast.\n   */\n  title?: string;\n  /**\n   * If `true` adds a close button to the toast.\n   */\n  closeable?: boolean;\n  /**\n   * Callback function to close the toast.\n   */\n  onClose?: () => void;\n  /**\n   * Callback function to undo the toast.\n   */\n  onUndo?: () => void;\n  /**\n   * The description of the toast\n   */\n  description?: string;\n  /**\n   * The undo text of the toast\n   */\n  undoText?: string;\n  /**\n   * Duration before dismiss in milliseconds, or `null` to never dismiss.\n   */\n  duration?: number | null;\n  /**\n   * One of toasted-notes positions.\n   */\n  position?: keyof typeof Position;\n  /**\n   * The message of the toast\n   */\n  message?: string;\n  /**\n   * The status of the toast\n   */\n  status?: \"info\" | \"success\" | \"error\" | \"warning\";\n  /**\n   * Custom icon\n   */\n  icon?: React.ReactNode;\n  /**\n   * Custom close icon\n   */\n  closeIcon?: React.ReactNode;\n}\n\ninterface RenderOption {\n  render?: (props: {\n    onClose: (id: string) => void;\n    id: string;\n  }) => React.ReactNode;\n}\nexport type useToastOptions = IToast & RenderOption;\n\nexport function createToast(Comp: React.ElementType) {\n  return function() {\n    const notify = useCallback(\n      ({\n        position = \"bottom\",\n        duration = 5000,\n        render,\n        ...rest\n      }: useToastOptions) => {\n        const options = {\n          position,\n          duration,\n        };\n\n        if (render) {\n          return toaster.notify(\n            ({ onClose, id }) => render({ onClose, id, ...rest }),\n            options\n          );\n        }\n\n        toaster.notify(\n          ({ onClose, id }) => (\n            <Comp\n              {...{\n                onClose,\n                id,\n                ...rest,\n              }}\n            />\n          ),\n          options\n        );\n      },\n      []\n    );\n\n    return notify;\n  };\n}\n"],"mappings":";;;AAAA,SAASA,OAAO,QAAkB,qBAAqB;AAEvD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,QAAQ,OAAO;AA6DnC,OAAO,SAASC,WAAW,CAACC,IAAuB,EAAE;EACnD,OAAO,YAAW;IAChB,IAAMC,MAAM,GAAGH,WAAW,CACxB,QAKuB;MAAA,IALtB;UACCI,QAAQ,GAAG,QAAQ;UACnBC,QAAQ,GAAG,IAAI;UACfC;QAEe,CAAC;QADbC,IAAI;MAEP,IAAMC,OAAO,GAAG;QACdJ,QAAQ;QACRC;MACF,CAAC;MAED,IAAIC,MAAM,EAAE;QACV,OAAOR,OAAO,CAACK,MAAM,CACnB;UAAA,IAAC;YAAEM,OAAO;YAAEC;UAAG,CAAC;UAAA,OAAKJ,MAAM;YAAGG,OAAO;YAAEC;UAAE,GAAKH,IAAI,EAAG;QAAA,GACrDC,OAAO,CACR;MACH;MAEAV,OAAO,CAACK,MAAM,CACZ;QAAA,IAAC;UAAEM,OAAO;UAAEC;QAAG,CAAC;QAAA,oBACd,oBAAC,IAAI;UAEDD,OAAO;UACPC;QAAE,GACCH,IAAI,EAET;MAAA,CACH,EACDC,OAAO,CACR;IACH,CAAC,EACD,EAAE,CACH;IAED,OAAOL,MAAM;EACf,CAAC;AACH"}