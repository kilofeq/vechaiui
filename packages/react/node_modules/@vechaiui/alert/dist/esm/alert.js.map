{"version":3,"sources":["../../src/alert.tsx"],"names":["cx","__DEV__","Icon","XIcon","React","useAlertClass","useAlertCloseButton","AlertContext","createContext","useAlertContext","context","useContext","undefined","Error","AlertCloseButton","forwardRef","ref","className","color","classes","displayName","Alert","props","variant","rest"],"mappings":";;;;;;AAAA,SAASA,EAAT,EAAaC,OAAb,QAA4B,iBAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,gBAA5B;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,aAAT,EAAwBC,mBAAxB,QAAmD,UAAnD;AAMA,IAAMC,YAAY,gBAAGH,KAAK,CAACI,aAAN,CAAkC,EAAlC,CAArB;;AAEA,IAAMC,eAAe,GAAG,MAAM;AAC5B,MAAMC,OAAO,GAAGN,KAAK,CAACO,UAAN,CAAiBJ,YAAjB,CAAhB;;AACA,MAAIG,OAAO,KAAKE,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CACJ,4DADI,CAAN;AAGD;;AACD,SAAOH,OAAP;AACD,CARD;;AAgBA,OAAO,IAAMI,gBAAgB,gBAAGV,KAAK,CAACW,UAAN,CAG9B,OAAgBC,GAAhB,KAAwB;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AACxB,MAAM;AAAEC,IAAAA;AAAF,MAAYT,eAAe,EAAjC;AACA,MAAMU,OAAO,GAAGb,mBAAmB,EAAnC;AAEA,sBACE;AACE,IAAA,GAAG,EAAEU,GADP;AAEE,kBAAYE,KAAK,GAAGA,KAAH,GAAWN,SAF9B;AAGE,IAAA,SAAS,EAAEZ,EAAE,CAACmB,OAAD,EAAUF,SAAV;AAHf,kBAKE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAEd,KADN;AAEE,IAAA,KAAK,EAAC,GAFR;AAGE,IAAA,SAAS,EAAC;AAHZ,IALF,CADF;AAaD,CApB+B,CAAzB;;AAsBP,IAAIF,OAAJ,EAAa;AACXa,EAAAA,gBAAgB,CAACM,WAAjB,GAA+B,kBAA/B;AACD;;AAaD,OAAO,IAAMC,KAAK,gBAAGjB,KAAK,CAACW,UAAN,CACnB,CAACO,KAAD,EAAQN,GAAR,KAAgB;AACd,MAAM;AAAEE,IAAAA,KAAK,GAAG,SAAV;AAAqBK,IAAAA,OAAO,GAAG,QAA/B;AAAyCN,IAAAA;AAAzC,MAAgEK,KAAtE;AAAA,MAA6DE,IAA7D,iCAAsEF,KAAtE;;AACA,MAAMH,OAAO,GAAGd,aAAa,CAAC;AAC5BkB,IAAAA;AAD4B,GAAD,CAA7B;AAIA,MAAMb,OAAO,GAAG;AAAEQ,IAAAA;AAAF,GAAhB;AAEA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAER;AAA9B,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,GAAG,EAAEM,GAFP;AAGE,kBAAYE,KAAK,GAAGA,KAAH,GAAWN,SAH9B;AAIE,IAAA,SAAS,EAAEZ,EAAE,CAACmB,OAAD,EAAUF,SAAV;AAJf,KAKMO,IALN,EADF,CADF;AAWD,CApBkB,CAAd;;AAuBP,IAAIvB,OAAJ,EAAa;AACXoB,EAAAA,KAAK,CAACD,WAAN,GAAoB,OAApB;AACD","sourcesContent":["import { cx, __DEV__ } from \"@vechaiui/utils\";\nimport { Icon, XIcon } from \"@vechaiui/icon\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport * as React from \"react\";\n\nimport { useAlertClass, useAlertCloseButton } from \"./styles\";\n\ninterface AlertContext {\n  color?: string;\n}\n\nconst AlertContext = React.createContext<AlertContext>({});\n\nconst useAlertContext = () => {\n  const context = React.useContext(AlertContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useAlertContext must be used within a AlertContextProvider\"\n    );\n  }\n  return context;\n};\n\ninterface IAlertCloseButtonProps extends DefaultProps {}\n\nexport interface AlertCloseButtonProps\n  extends React.HTMLAttributes<HTMLButtonElement>,\n    IAlertCloseButtonProps {}\n\nexport const AlertCloseButton = React.forwardRef<\n  HTMLButtonElement,\n  AlertCloseButtonProps\n>(({ className }, ref) => {\n  const { color } = useAlertContext();\n  const classes = useAlertCloseButton();\n\n  return (\n    <button\n      ref={ref}\n      data-color={color ? color : undefined}\n      className={cx(classes, className)}\n    >\n      <Icon\n        as={XIcon}\n        label=\"x\"\n        className=\"inline-block w-4 h-4 text-current align-text-bottom fill-current\"\n      />\n    </button>\n  );\n});\n\nif (__DEV__) {\n  AlertCloseButton.displayName = \"AlertCloseButton\";\n}\n\ninterface IAlertProps extends DefaultProps {\n  /* The color of the alert. */\n  color?: string;\n  /** Controls alert appearance */\n  variant?: \"subtle\" | \"solid\" | \"left-accent\";\n}\n\nexport interface AlertProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    IAlertProps {}\n\nexport const Alert = React.forwardRef<HTMLDivElement, AlertProps>(\n  (props, ref) => {\n    const { color = \"primary\", variant = \"subtle\", className, ...rest } = props;\n    const classes = useAlertClass({\n      variant,\n    });\n\n    const context = { color };\n\n    return (\n      <AlertContext.Provider value={context}>\n        <div\n          role=\"alert\"\n          ref={ref}\n          data-color={color ? color : undefined}\n          className={cx(classes, className)}\n          {...rest}\n        />\n      </AlertContext.Provider>\n    );\n  }\n);\n\nif (__DEV__) {\n  Alert.displayName = \"Alert\";\n}\n"],"file":"alert.js"}