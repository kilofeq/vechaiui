{"version":3,"sources":["../../src/Toast.tsx"],"names":["ReactDOM","React","ToastManager","isBrowser","window","document","PORTAL_ID","Toaster","constructor","createNotification","removeAll","closeToast","closeAll","bindNotify","fn","notify","message","options","close","id","position","portalElement","existingPortalElement","getElementById","el","createElement","className","body","appendChild","render"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,WAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAqD,gBAArD;AAGA,IAAMC,SAAS,GACb,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACC,QAAd,KAA2B,WAD9D;AAEA,IAAMC,SAAS,GAAG,aAAlB;;AAEA,MAAMC,OAAN,CAAc;AAKZC,EAAAA,WAAW,GAAG;AAAA;;AAAA,SAJdC,kBAIc;AAAA,SAHdC,SAGc;AAAA,SAFdC,UAEc;;AAAA,SA0BdC,QA1Bc,GA0BH,MAAM;AACf,UAAI,KAAKF,SAAT,EAAoB;AAClB,aAAKA,SAAL;AACD;AACF,KA9Ba;;AAAA,SAgCdG,UAhCc,GAgCD,CAACC,EAAD,EAAeJ,SAAf,EAAoCC,UAApC,KAA6D;AACxE,WAAKF,kBAAL,GAA0BK,EAA1B;AACA,WAAKJ,SAAL,GAAiBA,SAAjB;AACA,WAAKC,UAAL,GAAkBA,UAAlB;AACD,KApCa;;AAAA,SAsCdI,MAtCc,GAsCL,UAACC,OAAD,EAAuBC,OAAvB,EAAgE;AAAA,UAAzCA,OAAyC;AAAzCA,QAAAA,OAAyC,GAAP,EAAO;AAAA;;AACvE,UAAI,KAAI,CAACR,kBAAT,EAA6B;AAC3B,eAAO,KAAI,CAACA,kBAAL,CAAwBO,OAAxB,EAAiCC,OAAjC,CAAP;AACD;AACF,KA1Ca;;AAAA,SA4CdC,KA5Cc,GA4CN,CAACC,EAAD,EAAaC,QAAb,KAAyC;AAC/C,UAAG,KAAKT,UAAR,EAAmB;AACjB,aAAKA,UAAL,CAAgBQ,EAAhB,EAAoBC,QAApB;AACD;AACF,KAhDa;;AACZ,QAAI,CAACjB,SAAL,EAAgB;AACd;AACD;;AAED,QAAIkB,aAAJ;AACA,QAAMC,qBAAqB,GAAGjB,QAAQ,CAACkB,cAAT,CAAwBjB,SAAxB,CAA9B;;AAEA,QAAIgB,qBAAJ,EAA2B;AACzBD,MAAAA,aAAa,GAAGC,qBAAhB;AACD,KAFD,MAEO;AACL,UAAME,EAAE,GAAGnB,QAAQ,CAACoB,aAAT,CAAuB,KAAvB,CAAX;AACAD,MAAAA,EAAE,CAACL,EAAH,GAAQb,SAAR;AACAkB,MAAAA,EAAE,CAACE,SAAH,GAAe,SAAf;;AACA,UAAIrB,QAAQ,CAACsB,IAAT,IAAiB,IAArB,EAA2B;AACzBtB,QAAAA,QAAQ,CAACsB,IAAT,CAAcC,WAAd,CAA0BJ,EAA1B;AACD;;AACDH,MAAAA,aAAa,GAAGG,EAAhB;AACD;;AAEDxB,IAAAA,QAAQ,CAAC6B,MAAT,eACE,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAE,KAAKhB;AAA3B,MADF,EAEEQ,aAFF;AAID;;AA7BW;;AAwDd,eAAed,OAAf","sourcesContent":["import * as ReactDOM from \"react-dom\";\nimport * as React from \"react\";\nimport ToastManager, { MessageOptionalOptions } from \"./ToastManager\";\nimport { MessageProp, PositionsType } from \"./Message\";\n\nconst isBrowser =\n  typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nconst PORTAL_ID = \"react-toast\";\n\nclass Toaster {\n  createNotification?: Function;\n  removeAll?: Function;\n  closeToast?: Function;\n\n  constructor() {\n    if (!isBrowser) {\n      return;\n    }\n\n    let portalElement;\n    const existingPortalElement = document.getElementById(PORTAL_ID);\n\n    if (existingPortalElement) {\n      portalElement = existingPortalElement;\n    } else {\n      const el = document.createElement(\"div\");\n      el.id = PORTAL_ID;\n      el.className = \"Toaster\";\n      if (document.body != null) {\n        document.body.appendChild(el);\n      }\n      portalElement = el;\n    }\n\n    ReactDOM.render(\n      <ToastManager notify={this.bindNotify as any} />,\n      portalElement\n    );\n  }\n\n  closeAll = () => {\n    if (this.removeAll) {\n      this.removeAll();\n    }\n  };\n\n  bindNotify = (fn: Function, removeAll: Function, closeToast: Function) => {\n    this.createNotification = fn;\n    this.removeAll = removeAll;\n    this.closeToast = closeToast;\n  };\n\n  notify = (message: MessageProp, options: MessageOptionalOptions = {}) => {\n    if (this.createNotification) {\n      return this.createNotification(message, options);\n    }\n  };\n\n  close = (id: number, position: PositionsType) => {\n    if(this.closeToast){\n      this.closeToast(id, position);\n    }\n  }\n}\n\nexport default Toaster;\n"],"file":"Toast.js"}