{"version":3,"sources":["../../src/switch.tsx"],"names":["useFormControl","cx","__DEV__","VisuallyHidden","React","useSwitchClass","useSwitchBoxClass","Switch","forwardRef","props","ref","id","name","value","ariaLabel","ariaLabelledBy","color","defaultChecked","checked","size","onChange","className","rest","disabled","invalid","switchClasses","switchBoxClasses","undefined","displayName"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,iBAA/B;AAEA,SAASC,EAAT,EAAaC,OAAb,QAA4B,iBAA5B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,UAAlD;AAgDA,OAAO,IAAMC,MAAM,gBAAGH,KAAK,CAACI,UAAN,CACpB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACd,MAAM;AACJC,IAAAA,EADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,KAHI;AAIJ,kBAAcC,SAJV;AAKJ,uBAAmBC,cALf;AAMJC,IAAAA,KAAK,GAAG,SANJ;AAOJC,IAAAA,cAPI;AAQJC,IAAAA,OARI;AASJC,IAAAA,IAAI,GAAG,IATH;AAWJC,IAAAA,QAXI;AAaJC,IAAAA;AAbI,MAeFZ,KAfJ;AAAA,MAcKa,IAdL,iCAeIb,KAfJ;;AAiBA,MAAM;AAAEc,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAwBxB,cAAc,CAACS,KAAD,CAA5C;AAEA,MAAMgB,aAAa,GAAGpB,cAAc,CAAC;AACnCc,IAAAA,IADmC;AAEnCI,IAAAA,QAFmC;AAGnCL,IAAAA;AAHmC,GAAD,CAApC;AAMA,MAAMQ,gBAAgB,GAAGpB,iBAAiB,CAAC;AACzCa,IAAAA,IADyC;AAEzCD,IAAAA;AAFyC,GAAD,CAA1C;AAKA,sBACE;AAAO,IAAA,SAAS,EAAC;AAAjB,KAAyCI,IAAzC,gBACE,oBAAC,cAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,kBAAYR,SAHd;AAIE,uBAAiBC,cAJnB;AAKE,IAAA,EAAE,EAAEJ,EALN;AAME,IAAA,GAAG,EAAED,GANP;AAOE,IAAA,IAAI,EAAEE,IAPR;AAQE,IAAA,KAAK,EAAEC,KART;AASE,oBAAcW,OAThB;AAUE,IAAA,cAAc,EAAEP,cAVlB;AAWE,IAAA,QAAQ,EAAEG,QAXZ;AAYE,IAAA,OAAO,EAAEF,OAZX;AAaE,qBAAeK,QAbjB;AAcE,IAAA,QAAQ,EAAEA;AAdZ,IADF,eAiBE;AACE,IAAA,SAAS,EAAEtB,EAAE,CAACwB,aAAD,EAAgBJ,SAAhB,CADf;AAEE,qBAAeE,QAFjB;AAGE,kBAAYP,KAAK,GAAGA,KAAH,GAAWW;AAH9B,kBAKE;AAAK,IAAA,SAAS,EAAE1B,EAAE,CAACyB,gBAAD;AAAlB,IALF,CAjBF,CADF;AA2BD,CA3DmB,CAAf;;AA8DP,IAAIxB,OAAJ,EAAa;AACXK,EAAAA,MAAM,CAACqB,WAAP,GAAqB,QAArB;AACD","sourcesContent":["import { useFormControl } from \"@vechaiui/forms\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, __DEV__ } from \"@vechaiui/utils\";\nimport VisuallyHidden from \"@vechaiui/visually-hidden\";\nimport * as React from \"react\";\n\nimport { useSwitchClass, useSwitchBoxClass } from \"./styles\";\n\nexport interface SwitchProps<T = HTMLInputElement> extends DefaultProps {\n  /* Makes switch disabled */\n  disabled?: React.InputHTMLAttributes<T>[\"disabled\"];\n  /* Makes switch invalid */\n  invalid?: boolean;\n  /**\n   * If `true`, the switch will be initially checked.\n   */\n  defaultChecked?: boolean;\n  /**\n   * If `true`, the switch will be checked.\n   * You'll need to pass `onChange` to update it's value (since it's now controlled)\n   */\n  checked?: boolean;\n  /**\n   * The callback invoked when the checked state of the `switch` changes..\n   */\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  /* Switch id */\n  id?: string;\n  /* Switch name */\n  name?: string;\n  /* Switch value */\n  value?: string | number;\n  /* Size of the switch */\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\";\n  /* Set the switch color */\n  color?: string;\n  /**\n   * A11y: A label that describes the input\n   */\n  \"aria-label\"?: string;\n  /**\n   * A11y: The id of the element that describes the input\n   */\n  \"aria-describedby\"?: string;\n  /**\n   * A11y: Refers to the id of the element that labels the switch element.\n   */\n  \"aria-labelledby\"?: string;\n  /**\n   * The children is the label to be displayed to the right of the switch.\n   */\n  children?: React.ReactNode;\n}\n\nexport const Switch = React.forwardRef<HTMLInputElement, SwitchProps>(\n  (props, ref) => {\n    const {\n      id,\n      name,\n      value,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      color = \"primary\",\n      defaultChecked,\n      checked,\n      size = \"md\",\n\n      onChange,\n      children,\n      className,\n      ...rest\n    } = props;\n\n    const { disabled, invalid } = useFormControl(props);\n\n    const switchClasses = useSwitchClass({\n      size,\n      disabled,\n      checked,\n    });\n\n    const switchBoxClasses = useSwitchBoxClass({\n      size,\n      checked,\n    });\n\n    return (\n      <label className=\"form-switch-label\" {...rest}>\n        <VisuallyHidden\n          as=\"input\"\n          type=\"checkbox\"\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          id={id}\n          ref={ref}\n          name={name}\n          value={value}\n          aria-invalid={invalid}\n          defaultChecked={defaultChecked}\n          onChange={onChange}\n          checked={checked}\n          data-disabled={disabled}\n          disabled={disabled}\n        />\n        <div\n          className={cx(switchClasses, className)}\n          data-disabled={disabled}\n          data-color={color ? color : undefined}\n        >\n          <div className={cx(switchBoxClasses)} />\n        </div>\n      </label>\n    );\n  }\n);\n\nif (__DEV__) {\n  Switch.displayName = \"Switch\";\n}\n"],"file":"switch.js"}