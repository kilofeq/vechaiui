{"version":3,"sources":["../../src/switch.tsx"],"names":["Switch","React","forwardRef","props","ref","id","name","value","ariaLabel","ariaLabelledBy","color","defaultChecked","checked","size","onChange","children","className","rest","disabled","invalid","switchClasses","switchBoxClasses","undefined","__DEV__","displayName"],"mappings":";;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;AAgDO,IAAMA,MAAM,gBAAGC,KAAK,CAACC,UAAN,CACpB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACd,MACEC,EADF,GAeIF,KAfJ,CACEE,EADF;AAAA,MAEEC,IAFF,GAeIH,KAfJ,CAEEG,IAFF;AAAA,MAGEC,KAHF,GAeIJ,KAfJ,CAGEI,KAHF;AAAA,MAIgBC,SAJhB,GAeIL,KAfJ,CAIE,YAJF;AAAA,MAKqBM,cALrB,GAeIN,KAfJ,CAKE,iBALF;AAAA,qBAeIA,KAfJ,CAMEO,KANF;AAAA,MAMEA,KANF,6BAMU,SANV;AAAA,MAOEC,cAPF,GAeIR,KAfJ,CAOEQ,cAPF;AAAA,MAQEC,OARF,GAeIT,KAfJ,CAQES,OARF;AAAA,oBAeIT,KAfJ,CASEU,IATF;AAAA,MASEA,IATF,4BASS,IATT;AAAA,MAWEC,QAXF,GAeIX,KAfJ,CAWEW,QAXF;AAAA,MAYEC,QAZF,GAeIZ,KAfJ,CAYEY,QAZF;AAAA,MAaEC,SAbF,GAeIb,KAfJ,CAaEa,SAbF;AAAA,MAcKC,IAdL,iCAeId,KAfJ;;AAiBA,wBAA8B,2BAAeA,KAAf,CAA9B;AAAA,MAAQe,QAAR,mBAAQA,QAAR;AAAA,MAAkBC,OAAlB,mBAAkBA,OAAlB;;AAEA,MAAMC,aAAa,GAAG,4BAAe;AACnCP,IAAAA,IAAI,EAAJA,IADmC;AAEnCK,IAAAA,QAAQ,EAARA,QAFmC;AAGnCN,IAAAA,OAAO,EAAPA;AAHmC,GAAf,CAAtB;AAMA,MAAMS,gBAAgB,GAAG,+BAAkB;AACzCR,IAAAA,IAAI,EAAJA,IADyC;AAEzCD,IAAAA,OAAO,EAAPA;AAFyC,GAAlB,CAAzB;AAKA,sBACE;AAAO,IAAA,SAAS,EAAC;AAAjB,KAAyCK,IAAzC,gBACE,oBAAC,0BAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,kBAAYT,SAHd;AAIE,uBAAiBC,cAJnB;AAKE,IAAA,EAAE,EAAEJ,EALN;AAME,IAAA,GAAG,EAAED,GANP;AAOE,IAAA,IAAI,EAAEE,IAPR;AAQE,IAAA,KAAK,EAAEC,KART;AASE,oBAAcY,OAThB;AAUE,IAAA,cAAc,EAAER,cAVlB;AAWE,IAAA,QAAQ,EAAEG,QAXZ;AAYE,IAAA,OAAO,EAAEF,OAZX;AAaE,qBAAeM,QAbjB;AAcE,IAAA,QAAQ,EAAEA;AAdZ,IADF,eAiBE;AACE,IAAA,SAAS,EAAE,eAAGE,aAAH,EAAkBJ,SAAlB,CADb;AAEE,qBAAeE,QAFjB;AAGE,kBAAYR,KAAK,GAAGA,KAAH,GAAWY;AAH9B,kBAKE;AAAK,IAAA,SAAS,EAAE,eAAGD,gBAAH;AAAhB,IALF,CAjBF,CADF;AA2BD,CA3DmB,CAAf;;;AA8DP,IAAIE,cAAJ,EAAa;AACXvB,EAAAA,MAAM,CAACwB,WAAP,GAAqB,QAArB;AACD","sourcesContent":["import { useFormControl } from \"@vechaiui/forms\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, __DEV__ } from \"@vechaiui/utils\";\nimport VisuallyHidden from \"@vechaiui/visually-hidden\";\nimport * as React from \"react\";\n\nimport { useSwitchClass, useSwitchBoxClass } from \"./styles\";\n\nexport interface SwitchProps<T = HTMLInputElement> extends DefaultProps {\n  /* Makes switch disabled */\n  disabled?: React.InputHTMLAttributes<T>[\"disabled\"];\n  /* Makes switch invalid */\n  invalid?: boolean;\n  /**\n   * If `true`, the switch will be initially checked.\n   */\n  defaultChecked?: boolean;\n  /**\n   * If `true`, the switch will be checked.\n   * You'll need to pass `onChange` to update it's value (since it's now controlled)\n   */\n  checked?: boolean;\n  /**\n   * The callback invoked when the checked state of the `switch` changes..\n   */\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  /* Switch id */\n  id?: string;\n  /* Switch name */\n  name?: string;\n  /* Switch value */\n  value?: string | number;\n  /* Size of the switch */\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\";\n  /* Set the switch color */\n  color?: string;\n  /**\n   * A11y: A label that describes the input\n   */\n  \"aria-label\"?: string;\n  /**\n   * A11y: The id of the element that describes the input\n   */\n  \"aria-describedby\"?: string;\n  /**\n   * A11y: Refers to the id of the element that labels the switch element.\n   */\n  \"aria-labelledby\"?: string;\n  /**\n   * The children is the label to be displayed to the right of the switch.\n   */\n  children?: React.ReactNode;\n}\n\nexport const Switch = React.forwardRef<HTMLInputElement, SwitchProps>(\n  (props, ref) => {\n    const {\n      id,\n      name,\n      value,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      color = \"primary\",\n      defaultChecked,\n      checked,\n      size = \"md\",\n\n      onChange,\n      children,\n      className,\n      ...rest\n    } = props;\n\n    const { disabled, invalid } = useFormControl(props);\n\n    const switchClasses = useSwitchClass({\n      size,\n      disabled,\n      checked,\n    });\n\n    const switchBoxClasses = useSwitchBoxClass({\n      size,\n      checked,\n    });\n\n    return (\n      <label className=\"form-switch-label\" {...rest}>\n        <VisuallyHidden\n          as=\"input\"\n          type=\"checkbox\"\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          id={id}\n          ref={ref}\n          name={name}\n          value={value}\n          aria-invalid={invalid}\n          defaultChecked={defaultChecked}\n          onChange={onChange}\n          checked={checked}\n          data-disabled={disabled}\n          disabled={disabled}\n        />\n        <div\n          className={cx(switchClasses, className)}\n          data-disabled={disabled}\n          data-color={color ? color : undefined}\n        >\n          <div className={cx(switchBoxClasses)} />\n        </div>\n      </label>\n    );\n  }\n);\n\nif (__DEV__) {\n  Switch.displayName = \"Switch\";\n}\n"],"file":"switch.js"}