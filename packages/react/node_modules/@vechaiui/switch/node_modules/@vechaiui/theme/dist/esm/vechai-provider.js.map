{"version":3,"sources":["../../src/vechai-provider.tsx"],"names":["walkObject","omit","toRGB","deepmerge","React","createContext","useContext","useMemo","set","defaultTheme","toCSSVar","useSafeEffect","isBrowser","VechaiContext","undefined","displayName","VechaiProvider","theme","colorScheme","children","computedTheme","omittedTheme","colors","type","colorSchemes","document","documentElement","classList","add","remove","value","path","rgb","join","normalizedTheme","updateThemeVariables","__cssVars","setStyleVariable","name","rootStyle","style","setProperty","updateStyleHelper","_themeKey","themeKey","startsWith","vars","Object","entries","forEach","key","val","useVechai","Error","extendTheme","themeOverride","clone"],"mappings":"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","sourcesContent":["import {\n  walkObject,\n  omit,\n  toRGB,\n  deepmerge,\n  WithCSSVar,\n  Dict,\n} from \"@vechaiui/utils\";\nimport * as React from \"react\";\nimport { createContext, useContext, useMemo } from \"react\";\nimport set from \"lodash.set\";\n\nimport { defaultTheme } from \"./default-theme\";\nimport { toCSSVar } from \"./create-theme-vars\";\nimport { useSafeEffect } from \"./use-safe-effect\";\nimport { isBrowser } from \"./utils\";\nimport { VechaiTheme, VechaiThemeOverride } from \"./types\";\n\ninterface DictVechaiTheme extends Dict {}\n\nexport const VechaiContext = createContext<\n  | {\n      theme: WithCSSVar<DictVechaiTheme>;\n    }\n  | undefined\n>(undefined);\n\nVechaiContext.displayName = \"VechaiContext\";\n\nexport interface VechaiProviderProps {\n  children: React.ReactNode;\n  theme?: VechaiTheme;\n  colorScheme?: string;\n}\n\nexport function VechaiProvider({\n  theme = defaultTheme,\n  colorScheme = \"light\",\n  children,\n}: VechaiProviderProps) {\n  const computedTheme = useMemo(() => {\n    const omittedTheme = omit(theme, [\"colorSchemes\"]);\n    const { colors, type } = theme.colorSchemes[colorScheme] || {};\n    if (isBrowser) {\n      if (type === \"dark\") document.documentElement.classList.add(\"dark\");\n      else document.documentElement.classList.remove(\"dark\");\n    }\n\n    walkObject(colors, (value, path) => {\n      if (typeof value !== \"string\") return;\n      const rgb = toRGB(value);\n      if (rgb) set(colors, path, rgb.join(\",\"));\n    });\n\n    const normalizedTheme = {\n      ...omittedTheme,\n      colors,\n    };\n\n    return toCSSVar(normalizedTheme);\n  }, [theme, colorScheme]);\n\n  useSafeEffect(() => {\n    if (isBrowser) updateThemeVariables(computedTheme.__cssVars);\n  }, [computedTheme]);\n\n  const value = useMemo(\n    () => ({\n      theme: computedTheme,\n    }),\n    [computedTheme]\n  );\n\n  return (\n    <VechaiContext.Provider value={value}>{children}</VechaiContext.Provider>\n  );\n}\n\nfunction setStyleVariable(name: string, value: string) {\n  const rootStyle = document.documentElement.style;\n  rootStyle.setProperty(name, value);\n}\n\nfunction updateStyleHelper(_themeKey: string, style: string) {\n  const themeKey = _themeKey.startsWith(\"--\") ? _themeKey : `--${_themeKey}`;\n  setStyleVariable(themeKey, style);\n}\n\nfunction updateThemeVariables(vars: Record<string, string>) {\n  Object.entries(vars).forEach(([key, val]) => {\n    updateStyleHelper(key, val);\n  });\n}\n\nexport function useVechai<T extends object = Dict>() {\n  const theme = useContext(\n    (VechaiContext as unknown) as React.Context<T | undefined>\n  );\n  if (!theme) {\n    throw Error(\n      \"useVechai: `theme` is undefined. Seems you forgot to wrap your app in `<VechaiProvider />`\"\n    );\n  }\n\n  return theme as WithCSSVar<T>;\n}\n\nexport function extendTheme(themeOverride: VechaiThemeOverride): VechaiTheme {\n  return deepmerge(defaultTheme, themeOverride, { clone: true }) as VechaiTheme;\n}\n"],"file":"vechai-provider.js"}