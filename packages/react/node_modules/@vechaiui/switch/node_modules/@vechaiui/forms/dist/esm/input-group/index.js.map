{"version":3,"sources":["../../../src/input-group/index.tsx"],"names":["cx","getValidChildren","__DEV__","React","Input","InputLeftElement","InputRightElement","InputLeftAddon","InputRightAddon","inputSizes","xl","lg","md","sm","xs","plSizes","prSizes","InputGroup","forwardRef","props","ref","children","className","size","rest","height","pl","pr","rl","rr","validChildren","forEach","child","type","map","cloneElement","displayName"],"mappings":";;;;;;AACA,SAASA,EAAT,EAAaC,gBAAb,EAA+BC,OAA/B,QAA8C,iBAA9C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,KAAT,QAAkC,gBAAlC;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,kBAApD;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,gBAAhD;AAaA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,EAAE,EAAE,IADa;AAEjBC,EAAAA,EAAE,EAAE,IAFa;AAGjBC,EAAAA,EAAE,EAAE,GAHa;AAIjBC,EAAAA,EAAE,EAAE,GAJa;AAKjBC,EAAAA,EAAE,EAAE;AALa,CAAnB;AAQA,IAAMC,OAAO,GAAG;AACd,MAAI,OADU;AAEd,MAAI,OAFU;AAGd,KAAG,MAHW;AAId,KAAG,MAJW;AAKd,KAAG;AALW,CAAhB;AAQA,IAAMC,OAAO,GAAG;AACd,MAAI,OADU;AAEd,MAAI,OAFU;AAGd,KAAG,MAHW;AAId,KAAG,MAJW;AAKd,KAAG;AALW,CAAhB;AAQA,OAAO,IAAMC,UAAU,gBAAGd,KAAK,CAACe,UAAN,CACxB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACd,MAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,IAAI,GAAG;AAA9B,MAAgDJ,KAAtD;AAAA,MAA6CK,IAA7C,iCAAsDL,KAAtD;;AACA,MAAMM,MAAM,GAAGhB,UAAU,CAACc,IAAD,CAAzB;AACA,MAAIG,EAAJ;AACA,MAAIC,EAAJ;AAEA,MAAIC,EAAJ;AACA,MAAIC,EAAJ;AAEA,MAAMC,aAAa,GAAG7B,gBAAgB,CAACoB,QAAD,CAAtC;AAEAS,EAAAA,aAAa,CAACC,OAAd,CAAuBC,KAAD,IAAW;AAC/B,QAAIA,KAAK,CAACC,IAAN,KAAe5B,gBAAnB,EAAqC;AACnCqB,MAAAA,EAAE,GAAGX,OAAO,CAACU,MAAD,CAAZ;AACD;;AACD,QAAIO,KAAK,CAACC,IAAN,KAAe3B,iBAAnB,EAAsC;AACpCqB,MAAAA,EAAE,GAAGX,OAAO,CAACS,MAAD,CAAZ;AACD;;AAED,QAAIO,KAAK,CAACC,IAAN,KAAe1B,cAAnB,EAAmC;AACjCqB,MAAAA,EAAE,GAAG,gBAAL;AACD;;AACD,QAAII,KAAK,CAACC,IAAN,KAAezB,eAAnB,EAAoC;AAClCqB,MAAAA,EAAE,GAAG,gBAAL;AACD;AACF,GAdD;AAgBA,sBACE;AACE,IAAA,GAAG,EAAET,GADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,SAAS,EAAEpB,EAAE,CAAC,kBAAD,EAAqBsB,SAArB;AAHf,KAIME,IAJN,GAMGM,aAAa,CAACI,GAAd,CAAmBF,KAAD,IAAW;AAC5B,QAAIA,KAAK,CAACC,IAAN,KAAe7B,KAAnB,EAA0B;AACxB,0BAAOD,KAAK,CAACgC,YAAN,CAAmBH,KAAnB,EAA0B;AAC/BT,QAAAA,IAD+B;AAE/BD,QAAAA,SAAS,EAAEtB,EAAE,CAAC0B,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBG,KAAK,CAACb,KAAN,CAAYG,SAA7B;AAFkB,OAA1B,CAAP;AAID;;AACD,wBAAOnB,KAAK,CAACgC,YAAN,CAAmBH,KAAnB,EAA0B;AAAET,MAAAA;AAAF,KAA1B,CAAP;AACD,GARA,CANH,CADF;AAkBD,CA9CuB,CAAnB;;AAiDP,IAAIrB,OAAJ,EAAa;AACXe,EAAAA,UAAU,CAACmB,WAAX,GAAyB,YAAzB;AACD","sourcesContent":["import { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, getValidChildren, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\n\nimport { Input, InputProps } from \"../input/input\";\nimport { InputLeftElement, InputRightElement } from \"../input-element\";\nimport { InputLeftAddon, InputRightAddon } from \"../input-addon\";\n\ninterface IInputGroupProps extends DefaultProps {\n  /* Size of all wrapped input */\n  size?: InputProps[\"size\"];\n  /* React node */\n  children?: React.ReactNode;\n}\n\nexport interface InputGroupProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    IInputGroupProps {}\n\nconst inputSizes = {\n  xl: \"12\",\n  lg: \"10\",\n  md: \"8\",\n  sm: \"7\",\n  xs: \"6\",\n};\n\nconst plSizes = {\n  12: \"pl-12\",\n  10: \"pl-10\",\n  8: \"pl-8\",\n  7: \"pl-7\",\n  6: \"pl-6\",\n};\n\nconst prSizes = {\n  12: \"pr-12\",\n  10: \"pr-10\",\n  8: \"pr-8\",\n  7: \"pr-7\",\n  6: \"pr-6\",\n};\n\nexport const InputGroup = React.forwardRef<HTMLDivElement, InputGroupProps>(\n  (props, ref) => {\n    const { children, className, size = \"md\", ...rest } = props;\n    const height = inputSizes[size];\n    let pl: string | undefined;\n    let pr: string | undefined;\n\n    let rl: string | undefined;\n    let rr: string | undefined;\n\n    const validChildren = getValidChildren(children);\n\n    validChildren.forEach((child) => {\n      if (child.type === InputLeftElement) {\n        pl = plSizes[height];\n      }\n      if (child.type === InputRightElement) {\n        pr = prSizes[height];\n      }\n\n      if (child.type === InputLeftAddon) {\n        rl = \"rounded-l-none\";\n      }\n      if (child.type === InputRightAddon) {\n        rr = \"rounded-r-none\";\n      }\n    });\n\n    return (\n      <div\n        ref={ref}\n        role=\"group\"\n        className={cx(\"form-input-group\", className)}\n        {...rest}\n      >\n        {validChildren.map((child) => {\n          if (child.type === Input) {\n            return React.cloneElement(child, {\n              size,\n              className: cx(pl, pr, rl, rr, child.props.className),\n            });\n          }\n          return React.cloneElement(child, { size });\n        })}\n      </div>\n    );\n  }\n);\n\nif (__DEV__) {\n  InputGroup.displayName = \"InputGroup\";\n}\n"],"file":"index.js"}