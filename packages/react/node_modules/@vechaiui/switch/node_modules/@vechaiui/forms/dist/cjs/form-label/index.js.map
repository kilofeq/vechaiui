{"version":3,"sources":["../../../src/form-label/index.tsx"],"names":["FormLabel","React","forwardRef","props","ref","children","className","htmlFor","id","rest","formControl","classes","disabled","labelId","required","__DEV__","displayName","RequiredIndicator"],"mappings":";;;;;AACA;;AACA;;AAEA;;;;;;;;;;;;;AAYO,IAAMA,SAAS,gBAAGC,KAAK,CAACC,UAAN,CACvB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACd,MAAQC,QAAR,GAAsDF,KAAtD,CAAQE,QAAR;AAAA,MAAkBC,SAAlB,GAAsDH,KAAtD,CAAkBG,SAAlB;AAAA,MAA6BC,OAA7B,GAAsDJ,KAAtD,CAA6BI,OAA7B;AAAA,MAAsCC,EAAtC,GAAsDL,KAAtD,CAAsCK,EAAtC;AAAA,MAA6CC,IAA7C,iCAAsDN,KAAtD;;AACA,MAAMO,WAAW,GAAG,iCAAeD,IAAf,CAApB;AAEA,MAAME,OAAO,GAAG,eACd,YADc,EAEdD,WAAW,CAACE,QAAZ,IAAwB,qBAFV,EAGdN,SAHc,CAAhB;AAMA,sBACE;AACE,IAAA,GAAG,EAAEF,GADP;AAEE,IAAA,SAAS,EAAEO,OAFb;AAGE,IAAA,OAAO,EAAEJ,OAAO,IAAIG,WAAW,CAACF,EAHlC;AAIE,IAAA,EAAE,EAAEA,EAAE,IAAIE,WAAW,CAACG;AAJxB,KAKMJ,IALN,GAOGJ,QAPH,EAQGK,WAAW,CAACI,QAAZ,iBAAwB,oBAAC,iBAAD,OAR3B,CADF;AAYD,CAvBsB,CAAlB;;;AA0BP,IAAIC,cAAJ,EAAa;AACXf,EAAAA,SAAS,CAACgB,WAAV,GAAwB,WAAxB;AACD;;AAEM,IAAMC,iBAAiB,gBAAGhB,KAAK,CAACC,UAAN,CAG/B,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAChB,MAAQE,SAAR,GAA+BH,KAA/B,CAAQG,SAAR;AAAA,MAAsBG,IAAtB,iCAA+BN,KAA/B;;AACA,MAAMQ,OAAO,GAAG,eAAG,yBAAH,EAA8BL,SAA9B,CAAhB;AAEA,sBACE;AACE,IAAA,GAAG,EAAEF,GADP;AAEE,IAAA,SAAS,EAAEO,OAFb;AAGE,mBAAY,MAHd;AAIE,IAAA,QAAQ,EAAC;AAJX,KAKMF,IALN,EADF;AASD,CAhBgC,CAA1B;;;AAkBP,IAAIM,cAAJ,EAAa;AACXE,EAAAA,iBAAiB,CAACD,WAAlB,GAAgC,mBAAhC;AACD","sourcesContent":["import { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\n\nimport { useFormControl } from \"../form-control\";\n\ninterface IFormLabelProps extends DefaultProps {\n  disabled?: boolean;\n  children?: React.ReactNode;\n  htmlFor?: string;\n}\n\nexport interface FormLabelProps\n  extends React.HTMLAttributes<HTMLLabelElement>,\n    IFormLabelProps {}\n\nexport const FormLabel = React.forwardRef<HTMLLabelElement, FormLabelProps>(\n  (props, ref) => {\n    const { children, className, htmlFor, id, ...rest } = props;\n    const formControl = useFormControl(rest);\n\n    const classes = cx(\n      \"form-label\",\n      formControl.disabled && \"form-label-disabled\",\n      className\n    );\n\n    return (\n      <label\n        ref={ref}\n        className={classes}\n        htmlFor={htmlFor || formControl.id}\n        id={id || formControl.labelId}\n        {...rest}\n      >\n        {children}\n        {formControl.required && <RequiredIndicator />}\n      </label>\n    );\n  }\n);\n\nif (__DEV__) {\n  FormLabel.displayName = \"FormLabel\";\n}\n\nexport const RequiredIndicator = React.forwardRef<\n  HTMLSpanElement,\n  React.HTMLAttributes<HTMLSpanElement>\n>((props, ref) => {\n  const { className, ...rest } = props;\n  const classes = cx(\"form-required-indicator\", className);\n\n  return (\n    <span\n      ref={ref}\n      className={classes}\n      aria-hidden=\"true\"\n      children=\"*\"\n      {...rest}\n    />\n  );\n});\n\nif (__DEV__) {\n  RequiredIndicator.displayName = \"RequiredIndicator\";\n}\n"],"file":"index.js"}