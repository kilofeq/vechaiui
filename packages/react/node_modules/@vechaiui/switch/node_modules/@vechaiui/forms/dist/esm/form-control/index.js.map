{"version":3,"sources":["../../../src/form-control/index.tsx"],"names":["useId","cx","__DEV__","React","useFormControl","props","context","useFormControlContext","keys","Object","reduce","acc","prop","FormControlContext","createContext","undefined","useContext","FormControl","forwardRef","ref","children","className","required","disabled","invalid","readOnly","id","idProp","rest","classes","labelId","errorId","helpTextId","displayName"],"mappings":";;;;;;AAAA,SAASA,KAAT,QAAsB,gBAAtB;AAEA,SAASC,EAAT,EAAaC,OAAb,QAA4B,iBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AA+BA,OAAO,IAAMC,cAAc,GACzBC,KAD4B,IAEL;AACvB,MAAMC,OAAO,GAAGC,qBAAqB,EAArC;;AACA,MAAI,CAACD,OAAL,EAAc;AACZ,WAAOD,KAAP;AACD;;AACD,MAAMG,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,OAAZ,CAAb;AACA,SAAOE,IAAI,CAACE,MAAL,CAAY,CAACC,GAAD,EAAMC,IAAN,KAAe;AAChC;AACAD,IAAAA,GAAG,CAACC,IAAD,CAAH,GAAYP,KAAK,CAACO,IAAD,CAAjB;;AAEA,QAAIN,OAAJ,EAAa;AACX,UAAID,KAAK,CAACO,IAAD,CAAL,IAAe,IAAnB,EAAyB;AACvBD,QAAAA,GAAG,CAACC,IAAD,CAAH,GAAYN,OAAO,CAACM,IAAD,CAAnB;AACD;AACF;;AAED,WAAOD,GAAP;AACD,GAXM,EAWJ,EAXI,CAAP;AAYD,CApBM;AAsBP,IAAME,kBAAkB,gBAAGV,KAAK,CAACW,aAAN,CACzBC,SADyB,CAA3B;;AAIA,IAAMR,qBAAqB,GAAG,MAAMJ,KAAK,CAACa,UAAN,CAAiBH,kBAAjB,CAApC;;AAEA,OAAO,IAAMI,WAAW,gBAAGd,KAAK,CAACe,UAAN,CACzB,CAACb,KAAD,EAAQc,GAAR,KAAgB;AACd,MAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,EAAE,EAAEC;AAPA,MASFtB,KATJ;AAAA,MAQKuB,IARL,iCASIvB,KATJ;;AAUA,MAAMwB,OAAO,GAAG5B,EAAE,CAAC,cAAD,EAAiBoB,SAAjB,CAAlB;AAEA,MAAMK,EAAE,GAAGC,MAAM,eAAa3B,KAAK,EAAnC;AAEA,MAAM8B,OAAO,GAAMJ,EAAN,WAAb;AACA,MAAMK,OAAO,GAAML,EAAN,WAAb;AACA,MAAMM,UAAU,GAAMN,EAAN,cAAhB;AAEA,MAAMpB,OAAO,GAAG;AACdgB,IAAAA,QADc;AAEdC,IAAAA,QAFc;AAGdC,IAAAA,OAHc;AAIdC,IAAAA,QAJc;AAKdC,IAAAA,EALc;AAMdI,IAAAA,OANc;AAOdC,IAAAA,OAPc;AAQdC,IAAAA;AARc,GAAhB;AAWA,sBACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE1B;AAApC,kBACE;AAAK,IAAA,IAAI,EAAC,OAAV;AAAkB,IAAA,GAAG,EAAEa,GAAvB;AAA4B,IAAA,SAAS,EAAEU;AAAvC,KAAoDD,IAApD,GACGR,QADH,CADF,CADF;AAOD,CAtCwB,CAApB;;AAyCP,IAAIlB,OAAJ,EAAa;AACXe,EAAAA,WAAW,CAACgB,WAAZ,GAA0B,WAA1B;AACD","sourcesContent":["import { useId } from \"@reach/auto-id\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\n\ninterface UseFormControlProps {\n  /** If `true`, this prop is passed to its children. */\n  required?: boolean;\n  /** If `true`, this prop is passed to its children. */\n  disabled?: boolean;\n  /** If `true`, this prop is passed to its children. */\n  invalid?: boolean;\n  /** If `true`, this prop is passed to its children. */\n  readOnly?: boolean;\n  /** The `id` to use for the form control. */\n  id?: string;\n}\n\ninterface UseFormControlData extends UseFormControlProps {\n  labelId?: string;\n  errorId?: string;\n  helpTextId?: string;\n}\n\ninterface IFormControlProps extends DefaultProps, UseFormControlProps {\n  children?: React.ReactNode;\n}\n\nexport interface FormControlProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    IFormControlProps {}\n\ninterface FormControlContext extends UseFormControlProps {}\n\nexport const useFormControl = (\n  props: UseFormControlProps\n): UseFormControlData => {\n  const context = useFormControlContext();\n  if (!context) {\n    return props;\n  }\n  const keys = Object.keys(context);\n  return keys.reduce((acc, prop) => {\n    /** Giving precedence to `props` over `context` */\n    acc[prop] = props[prop];\n\n    if (context) {\n      if (props[prop] == null) {\n        acc[prop] = context[prop];\n      }\n    }\n\n    return acc;\n  }, {});\n};\n\nconst FormControlContext = React.createContext<FormControlContext | undefined>(\n  undefined\n);\n\nconst useFormControlContext = () => React.useContext(FormControlContext);\n\nexport const FormControl = React.forwardRef<HTMLDivElement, FormControlProps>(\n  (props, ref) => {\n    const {\n      children,\n      className,\n      required,\n      disabled,\n      invalid,\n      readOnly,\n      id: idProp,\n      ...rest\n    } = props;\n    const classes = cx(\"form-control\", className);\n\n    const id = idProp || `field-${useId()}`;\n\n    const labelId = `${id}-label`;\n    const errorId = `${id}-error`;\n    const helpTextId = `${id}-helptext`;\n\n    const context = {\n      required,\n      disabled,\n      invalid,\n      readOnly,\n      id,\n      labelId,\n      errorId,\n      helpTextId,\n    };\n\n    return (\n      <FormControlContext.Provider value={context}>\n        <div role=\"group\" ref={ref} className={classes} {...rest}>\n          {children}\n        </div>\n      </FormControlContext.Provider>\n    );\n  }\n);\n\nif (__DEV__) {\n  FormControl.displayName = \"FormGroup\";\n}\n"],"file":"index.js"}