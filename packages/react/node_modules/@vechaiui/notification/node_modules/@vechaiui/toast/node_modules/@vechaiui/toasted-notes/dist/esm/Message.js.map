{"version":3,"sources":["../../src/Message.tsx"],"names":["React","useTransition","animated","ReachAlert","Alert","useTimeout","getStyle","position","style","display","flexDirection","alignItems","includes","Message","id","message","onRequestRemove","requestClose","duration","container","useRef","timeout","setTimeout","useState","localShow","setLocalShow","isFromTop","close","animation","config","mass","tension","friction","from","opacity","height","transform","enter","next","current","getBoundingClientRect","leave","onRest","transition","useMemo","onMouseEnter","onMouseLeave","useEffect","renderMessage","isValidElement","onClose","props","item","pointerEvents"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useTransition, animated } from \"react-spring\";\nimport ReachAlert from \"@reach/alert\";\nimport Alert from \"./Alert\";\nimport { useTimeout } from \"./useTimeout\";\nimport POSITIONS from \"./Positions\";\n\ninterface MessageCallback {\n  id: string;\n  onClose: () => void;\n}\n\nexport type MessageType = \"default\" | \"success\" | \"error\";\n\nexport type PositionsType = keyof typeof POSITIONS;\n\nconst getStyle = (position: PositionsType) => {\n  let style = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  } as React.CSSProperties;\n\n  if (position.includes(\"right\")) {\n    style.alignItems = \"flex-end\";\n  } else if (position.includes(\"left\")) {\n    style.alignItems = \"flex-start\";\n  }\n\n  return style;\n};\n\nexport type MessageProp =\n  | React.ReactNode\n  | ((callback: MessageCallback) => React.ReactNode)\n  | string;\n\nexport interface MessageOptions {\n  id: string;\n  duration: number | null;\n  type: MessageType;\n  onRequestRemove: () => void;\n  onRequestClose: () => void;\n  showing: boolean;\n  position: PositionsType;\n}\n\ninterface Props extends MessageOptions {\n  message: MessageProp;\n  zIndex?: number;\n  requestClose?: boolean;\n  position: PositionsType;\n}\n\nexport const Message = ({\n  id,\n  message,\n  position,\n  onRequestRemove,\n  requestClose = false,\n  duration = 30000,\n}: Props) => {\n  const container = React.useRef<HTMLDivElement | null>(null);\n  const [timeout, setTimeout] = React.useState(duration);\n  const [localShow, setLocalShow] = React.useState(true);\n\n  const isFromTop =\n    position === \"top-left\" || position === \"top-right\" || position === \"top\";\n\n  useTimeout(close, timeout);\n\n  const animation = {\n    config: { mass: 1, tension: 185, friction: 26 },\n    from: {\n      opacity: 1,\n      height: 0,\n      transform: `translateY(${isFromTop ? \"-100%\" : 0}) scale(1)`,\n    },\n    enter: () => (next: any) =>\n      next({\n        opacity: 1,\n        height: container.current!.getBoundingClientRect().height,\n        transform: `translateY(0) scale(1)`,\n      }),\n    leave: {\n      opacity: 0,\n      height: 0,\n      transform: `translateY(0 scale(0.9)`,\n    },\n    onRest,\n  } as any;\n\n  const transition = useTransition(localShow, animation);\n  const style = React.useMemo(() => getStyle(position), [position]);\n\n  function onMouseEnter() {\n    setTimeout(null);\n  }\n\n  function onMouseLeave() {\n    setTimeout(duration);\n  }\n\n  function onRest() {\n    if (!localShow) {\n      onRequestRemove();\n    }\n  }\n\n  function close() {\n    setLocalShow(false);\n  }\n\n  React.useEffect(() => {\n    if (requestClose) {\n      setLocalShow(false);\n    }\n  }, [requestClose]);\n\n  function renderMessage() {\n    if (typeof message === \"string\" || React.isValidElement(message)) {\n      return <Alert id={id} title={message} onClose={close} />;\n    }\n\n    if (typeof message === \"function\") {\n      return message({\n        id,\n        onClose: close,\n      });\n    }\n\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      {transition(\n        (props, item) =>\n          item && (\n            <animated.div\n              className=\"Toaster__message\"\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n              style={{\n                opacity: props.opacity,\n                height: props.height,\n                ...style,\n              }}\n            >\n              <animated.div\n                style={{\n                  transform: props.transform,\n                  pointerEvents: \"auto\",\n                }}\n                ref={container}\n                className=\"Toaster__message-wrapper\"\n              >\n                <ReachAlert>{renderMessage()}</ReachAlert>\n              </animated.div>\n            </animated.div>\n          )\n      )}\n    </React.Fragment>\n  );\n};\n"],"file":"Message.js"}