{"version":3,"sources":["../../src/notification.tsx"],"names":["statuses","info","icon","InfoIcon","cx","label","success","CheckCircleIcon","error","XCricleIcon","warning","ExclamationIcon","Notification","React","forwardRef","props","ref","title","description","className","status","onClose","customIcon","customCloseIcon","closeIcon","closeable","onUndo","undoText","XIcon","__DEV__","displayName","useNotification"],"mappings":"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","sourcesContent":["import { Button } from \"@vechaiui/button\";\nimport {\n  Icon,\n  InfoIcon,\n  XIcon,\n  XCricleIcon,\n  CheckCircleIcon,\n  ExclamationIcon,\n} from \"@vechaiui/icon\";\nimport { createToast, useToastOptions } from \"@vechaiui/toast\";\nimport { cx as clsx, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\n\nconst statuses = {\n  info: {\n    icon: InfoIcon,\n    cx: \"notification-icon-info\",\n    label: \"info\"\n  },\n  success: {\n    icon: CheckCircleIcon,\n    cx: \"notification-icon-success\",\n    label: \"check-circle\",\n  },\n  error: {\n    icon: XCricleIcon,\n    cx: \"notification-icon-error\",\n    label: \"x-circle\"\n  },\n  warning: {\n    icon: ExclamationIcon,\n    cx: \"notification-icon-warning\",\n    label: \"exclamationIcon\",\n  },\n};\n\ntype OmittedTypes = \"message\";\n\nexport interface NotificationProps\n  extends Omit<useToastOptions, OmittedTypes> { }\n\nconst Notification = React.forwardRef<HTMLDivElement, NotificationProps>(\n  (props, ref) => {\n    const {\n      title,\n      description,\n      className,\n      status = \"\",\n      onClose,\n      icon: customIcon,\n      closeIcon: customCloseIcon,\n      closeable = true,\n      onUndo,\n      undoText = \"Undo\",\n    } = props;\n    const { icon, cx, label } = statuses[status] || {};\n\n    return (\n      <div ref={ref} className={clsx(\"notification\", className)}>\n        {((icon && cx) || customIcon) && (\n          <span className={clsx(\"notification-icon\", cx)}>\n            {customIcon ? (\n              customIcon\n            ) : (\n              <Icon label={label} as={customIcon || icon} className=\"w-5 h-5\" />\n            )}\n          </span>\n        )}\n        <div className=\"notification-content\">\n          <span className=\"notification-content-title\">{title}</span>\n          <span className=\"notification-content-description\">\n            {description}\n          </span>\n        </div>\n        <div className=\"notification-action\">\n          {onUndo && (\n            <Button\n              variant=\"link\"\n              color=\"primary\"\n              className=\"notification-action-undo\"\n              onClick={() => {\n                onUndo();\n              }}\n            >\n              {undoText}\n            </Button>\n          )}\n\n          {closeable && (\n            <button\n              onClick={onClose}\n              className=\"notification-action-close-button\"\n            >\n              {customCloseIcon ? (\n                customCloseIcon\n              ) : (\n                <Icon\n                  as={XIcon}\n                  label=\"x\"\n                  className=\"text-current align-text-bottom h-3.5 w-3.5\"\n                />\n              )}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nif (__DEV__) {\n  Notification.displayName = \"Notification\";\n}\n\nexport const useNotification = createToast(Notification);\n"],"file":"notification.js"}