{"version":3,"sources":["../../src/breadcrumb.tsx"],"names":["BreadcrumbSeparator","React","forwardRef","ref","className","props","__DEV__","displayName","BreadcrumbLink","currentPage","Comp","Link","undefined","BreadcrumbItem","separator","lastChild","addSeparator","children","rest","validChildren","clones","map","child","type","Breadcrumb","index","length"],"mappings":"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","sourcesContent":["import { Link, LinkProps } from \"@vechaiui/link\";\nimport { cx, getValidChildren, __DEV__ } from \"@vechaiui/utils\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport * as React from \"react\";\nimport { cloneElement } from \"react\";\n\nexport interface BreadcrumbSeparatorProps extends DefaultProps, React.HTMLAttributes<HTMLSpanElement> {\n  children?: React.ReactNode;\n}\n\nconst BreadcrumbSeparator = React.forwardRef<\n  HTMLSpanElement,\n  BreadcrumbSeparatorProps\n>(({ className, ...props }, ref) => {\n  return (\n    <span\n      ref={ref}\n      role=\"presentation\"\n      className={cx(\"breadcrumb-separator\", className)}\n      {...props}\n    />\n  );\n});\n\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n}\n\ninterface BreadcrumbLinkProps extends LinkProps {\n  /**\n   * If `true`, indicates that the breadcrumb item is active, adds\n   * `aria-current=page` and renders a `span`\n   */\n  currentPage?: boolean;\n}\n\nexport type { BreadcrumbLinkProps }\n\nconst BreadcrumbLink = React.forwardRef<any, any>(\n  ({ currentPage, ...props }, ref) => {\n    const Comp = currentPage ? \"span\" : Link;\n\n    return (\n      <Comp ref={ref} aria-current={currentPage ? \"page\" : undefined} {...props} />\n    );\n  }\n);\n\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\";\n}\n\nexport interface BreadcrumbItemProps extends BreadcrumbProps {\n  /**\n   * If `true`, indicates that the breadcrumb item is active, adds\n   * `aria-current=page` and renders a `span`\n   */\n  currentPage?: boolean;\n  lastChild?: boolean;\n}\n\nconst BreadcrumbItem = React.forwardRef<HTMLLIElement, BreadcrumbItemProps>(\n  (props, ref) => {\n    const {\n      currentPage,\n      separator,\n      lastChild,\n      addSeparator,\n      children,\n      className,\n      ...rest\n    } = props;\n\n    const validChildren = getValidChildren(children);\n    const clones = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return cloneElement(child, { currentPage });\n      }\n\n      if (child.type === BreadcrumbSeparator) {\n        return cloneElement(child, {\n          children: child.props.children || separator,\n        });\n      }\n\n      return child;\n    });\n\n    return (\n      <li ref={ref} className={cx(\"breadcrumb-item\", className)} {...rest}>\n        {clones}\n        {!lastChild && addSeparator && (\n          <BreadcrumbSeparator children={separator} />\n        )}\n      </li>\n    );\n  }\n);\n\ninterface IBreadcrumbProps extends DefaultProps {\n  /* The visual separator between each breadcrumb item */\n  separator?: string | React.ReactElement;\n  /* Add the breadcrumb separator automatically */\n  addSeparator?: boolean;\n  /* React Node */\n  children?: React.ReactNode;\n}\n\nexport interface BreadcrumbProps\n  extends React.HTMLAttributes<HTMLElement>,\n    IBreadcrumbProps {}\n\nconst Breadcrumb = React.forwardRef<HTMLElement, BreadcrumbProps>(\n  (props, ref) => {\n    const {\n      children,\n      addSeparator = true,\n      separator = \"/\",\n      className,\n      ...rest\n    } = props;\n    const validChildren = getValidChildren(children);\n    const clones = validChildren.map((child, index) => {\n      return cloneElement(child, {\n        addSeparator,\n        separator,\n        lastChild: validChildren.length === index + 1,\n      });\n    });\n\n    return (\n      <nav\n        ref={ref}\n        aria-label=\"breadcrumb\"\n        className={cx(\"breadcrumb\", className)}\n        {...rest}\n      >\n        <ol>{clones}</ol>\n      </nav>\n    );\n  }\n);\n\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\";\n}\nexport { Breadcrumb, BreadcrumbLink, BreadcrumbItem, BreadcrumbSeparator };\n"],"file":"breadcrumb.js"}