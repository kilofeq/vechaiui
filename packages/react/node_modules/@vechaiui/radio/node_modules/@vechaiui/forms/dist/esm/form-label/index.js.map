{"version":3,"sources":["../../../src/form-label/index.tsx"],"names":["cx","__DEV__","React","useFormControl","FormLabel","forwardRef","props","ref","children","className","htmlFor","id","rest","formControl","classes","disabled","labelId","required","displayName","RequiredIndicator"],"mappings":";;;;;;;AACA,SAASA,EAAT,EAAaC,OAAb,QAA4B,iBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,cAAT,QAA+B,iBAA/B;AAYA,OAAO,IAAMC,SAAS,gBAAGF,KAAK,CAACG,UAAN,CACvB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACd,MAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA;AAAhC,MAAgDL,KAAtD;AAAA,MAA6CM,IAA7C,iCAAsDN,KAAtD;;AACA,MAAMO,WAAW,GAAGV,cAAc,CAACS,IAAD,CAAlC;AAEA,MAAME,OAAO,GAAGd,EAAE,CAChB,YADgB,EAEhBa,WAAW,CAACE,QAAZ,IAAwB,qBAFR,EAGhBN,SAHgB,CAAlB;AAMA,sBACE;AACE,IAAA,GAAG,EAAEF,GADP;AAEE,IAAA,SAAS,EAAEO,OAFb;AAGE,IAAA,OAAO,EAAEJ,OAAO,IAAIG,WAAW,CAACF,EAHlC;AAIE,IAAA,EAAE,EAAEA,EAAE,IAAIE,WAAW,CAACG;AAJxB,KAKMJ,IALN,GAOGJ,QAPH,EAQGK,WAAW,CAACI,QAAZ,iBAAwB,oBAAC,iBAAD,OAR3B,CADF;AAYD,CAvBsB,CAAlB;;AA0BP,IAAIhB,OAAJ,EAAa;AACXG,EAAAA,SAAS,CAACc,WAAV,GAAwB,WAAxB;AACD;;AAED,OAAO,IAAMC,iBAAiB,gBAAGjB,KAAK,CAACG,UAAN,CAG/B,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAChB,MAAM;AAAEE,IAAAA;AAAF,MAAyBH,KAA/B;AAAA,MAAsBM,IAAtB,iCAA+BN,KAA/B;;AACA,MAAMQ,OAAO,GAAGd,EAAE,CAAC,yBAAD,EAA4BS,SAA5B,CAAlB;AAEA,sBACE;AACE,IAAA,GAAG,EAAEF,GADP;AAEE,IAAA,SAAS,EAAEO,OAFb;AAGE,mBAAY,MAHd;AAIE,IAAA,QAAQ,EAAC;AAJX,KAKMF,IALN,EADF;AASD,CAhBgC,CAA1B;;AAkBP,IAAIX,OAAJ,EAAa;AACXkB,EAAAA,iBAAiB,CAACD,WAAlB,GAAgC,mBAAhC;AACD","sourcesContent":["import { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\n\nimport { useFormControl } from \"../form-control\";\n\ninterface IFormLabelProps extends DefaultProps {\n  disabled?: boolean;\n  children?: React.ReactNode;\n  htmlFor?: string;\n}\n\nexport interface FormLabelProps\n  extends React.HTMLAttributes<HTMLLabelElement>,\n    IFormLabelProps {}\n\nexport const FormLabel = React.forwardRef<HTMLLabelElement, FormLabelProps>(\n  (props, ref) => {\n    const { children, className, htmlFor, id, ...rest } = props;\n    const formControl = useFormControl(rest);\n\n    const classes = cx(\n      \"form-label\",\n      formControl.disabled && \"form-label-disabled\",\n      className\n    );\n\n    return (\n      <label\n        ref={ref}\n        className={classes}\n        htmlFor={htmlFor || formControl.id}\n        id={id || formControl.labelId}\n        {...rest}\n      >\n        {children}\n        {formControl.required && <RequiredIndicator />}\n      </label>\n    );\n  }\n);\n\nif (__DEV__) {\n  FormLabel.displayName = \"FormLabel\";\n}\n\nexport const RequiredIndicator = React.forwardRef<\n  HTMLSpanElement,\n  React.HTMLAttributes<HTMLSpanElement>\n>((props, ref) => {\n  const { className, ...rest } = props;\n  const classes = cx(\"form-required-indicator\", className);\n\n  return (\n    <span\n      ref={ref}\n      className={classes}\n      aria-hidden=\"true\"\n      children=\"*\"\n      {...rest}\n    />\n  );\n});\n\nif (__DEV__) {\n  RequiredIndicator.displayName = \"RequiredIndicator\";\n}\n"],"file":"index.js"}