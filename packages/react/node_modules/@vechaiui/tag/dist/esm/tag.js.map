{"version":3,"sources":["../../src/tag.tsx"],"names":["Icon","XIcon","cx","__DEV__","React","useTagClass","TagCloseButton","forwardRef","ref","disabled","className","iconClassName","props","displayName","TagLabel","Tag","variant","size","color","rest","classes","undefined"],"mappings":";;;;;;;;AACA,SAASA,IAAT,EAAeC,KAAf,QAA4B,gBAA5B;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,iBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,WAAT,QAA4B,UAA5B;AASA;AACA,OAAO,IAAMC,cAAc,gBAAGF,KAAK,CAACG,UAAN,CAG5B,OAAmDC,GAAnD;AAAA,MAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAD;AAAA,MAA0CC,KAA1C;;AAAA,sBACA;AACE,IAAA,GAAG,EAAEJ,GADP;AAEE,IAAA,SAAS,EAAEN,EAAE,CAAC,kBAAD,EAAqBQ,SAArB,CAFf;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,qBAAeA;AAJjB,KAKMG,KALN,gBAOE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEX,KAAV;AAAiB,IAAA,KAAK,EAAC,GAAvB;AAA2B,IAAA,SAAS,EAAEC,EAAE,CAAC,aAAD,EAAgBS,aAAhB;AAAxC,IAPF,CADA;AAAA,CAH4B,CAAvB;;AAeP,IAAIR,OAAJ,EAAa;AACXG,EAAAA,cAAc,CAACO,WAAf,GAA6B,gBAA7B;AACD;;AAMD,OAAO,IAAMC,QAAiC,GAAG;AAAA,MAAC;AAAEJ,IAAAA;AAAF,GAAD;AAAA,MAAiBE,KAAjB;;AAAA,sBAC/C;AAAM,IAAA,SAAS,EAAEV,EAAE,CAACQ,SAAD;AAAnB,KAAoCE,KAApC,EAD+C;AAAA,CAA1C;;AAIP,IAAIT,OAAJ,EAAa;AACXW,EAAAA,QAAQ,CAACD,WAAT,GAAuB,UAAvB;AACD;;AAeD,OAAO,IAAME,GAAG,gBAAGX,KAAK,CAACG,UAAN,CAA2C,CAACK,KAAD,EAAQJ,GAAR,KAAgB;AAC5E,MAAM;AACJQ,IAAAA,OAAO,GAAG,SADN;AAEJC,IAAAA,IAAI,GAAG,IAFH;AAGJC,IAAAA,KAAK,GAAG,EAHJ;AAIJR,IAAAA;AAJI,MAMFE,KANJ;AAAA,MAKKO,IALL,iCAMIP,KANJ;;AAOA,MAAMQ,OAAO,GAAGf,WAAW,CAAC;AAAEW,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,CAA3B;AAEA,sBACE;AACE,IAAA,GAAG,EAAET,GADP;AAEE,kBAAYU,KAAK,GAAGA,KAAH,GAAWG,SAF9B;AAGE,IAAA,SAAS,EAAEnB,EAAE,CAACkB,OAAD,EAAUV,SAAV;AAHf,KAIMS,IAJN,EADF;AAQD,CAlBkB,CAAZ;;AAoBP,IAAIhB,OAAJ,EAAa;AACXY,EAAAA,GAAG,CAACF,WAAJ,GAAkB,KAAlB;AACD","sourcesContent":["import { DefaultProps } from \"@vechaiui/theme\";\nimport { Icon, XIcon } from \"@vechaiui/icon\";\nimport { cx, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\n\nimport { useTagClass } from \"./styles\";\n\nexport interface TagCloseButtonProps\n  extends DefaultProps,\n    React.HTMLAttributes<HTMLButtonElement> {\n  disabled?: boolean;\n  iconClassName?: string;\n}\n\n// FIXME\nexport const TagCloseButton = React.forwardRef<\n  HTMLButtonElement,\n  TagCloseButtonProps\n>(({ disabled, className, iconClassName, ...props }, ref) => (\n  <button\n    ref={ref}\n    className={cx(\"tag-close-button\", className)}\n    disabled={disabled}\n    aria-disabled={disabled}\n    {...props}\n  >\n    <Icon as={XIcon} label=\"x\" className={cx(\"w-3.5 h-3.5\", iconClassName)} />\n  </button>\n));\n\nif (__DEV__) {\n  TagCloseButton.displayName = \"TagCloseButton\";\n}\n\nexport interface TagLabelProps\n  extends DefaultProps,\n    React.HTMLAttributes<HTMLSpanElement> {}\n\nexport const TagLabel: React.FC<TagLabelProps> = ({ className, ...props }) => (\n  <span className={cx(className)} {...props} />\n);\n\nif (__DEV__) {\n  TagLabel.displayName = \"TagLabel\";\n}\n\ninterface ITagProps extends DefaultProps {\n  /* The color of tag */\n  color?: string;\n  /* Controls tag appearance */\n  variant?: \"outline\" | \"solid\" | \"light\";\n  /* The size of tag */\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\";\n}\n\nexport interface TagProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    ITagProps {}\n\nexport const Tag = React.forwardRef<HTMLDivElement, TagProps>((props, ref) => {\n  const {\n    variant = \"outline\",\n    size = \"md\",\n    color = \"\",\n    className,\n    ...rest\n  } = props;\n  const classes = useTagClass({ variant, size });\n\n  return (\n    <div\n      ref={ref}\n      data-color={color ? color : undefined}\n      className={cx(classes, className)}\n      {...rest}\n    />\n  );\n});\n\nif (__DEV__) {\n  Tag.displayName = \"Tag\";\n}\n"],"file":"tag.js"}