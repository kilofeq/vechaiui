{"version":3,"sources":["../../src/button.tsx"],"names":["Spinner","cx","__DEV__","React","useButtonClass","Button","forwardRef","props","ref","disabled","_disabled","loading","active","loadingText","type","leftIcon","rightIcon","children","className","color","variant","size","rest","classes","undefined","displayName"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,mBAAxB;AAEA,SAASC,EAAT,EAAaC,OAAb,QAA4B,iBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,cAAT,QAA+B,UAA/B;AA+BA,OAAO,IAAMC,MAAM,gBAAGF,KAAK,CAACG,UAAN,CACpB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACd,MAAM;AACJC,IAAAA,QAAQ,EAAEC,SADN;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,IALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA,SATI;AAUJC,IAAAA,KAVI;AAWJC,IAAAA,OAAO,GAAG,SAXN;AAYJC,IAAAA,IAAI,GAAG;AAZH,MAcFd,KAdJ;AAAA,MAaKe,IAbL,iCAcIf,KAdJ;;AAgBA,MAAME,QAAQ,GAAGC,SAAS,IAAIC,OAA9B;AACA,MAAMY,OAAO,GAAGnB,cAAc,CAAC;AAC7BgB,IAAAA,OAD6B;AAE7BC,IAAAA,IAF6B;AAG7BZ,IAAAA;AAH6B,GAAD,CAA9B;AAMA,sBACE;AACE,IAAA,GAAG,EAAED,GADP;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,qBAAeA,QAHjB;AAIE,IAAA,IAAI,EAAEK,IAJR;AAKE,mBAAaF,MAAM,GAAG,MAAH,GAAYY,SALjC;AAME,kBAAYL,KAAK,GAAGA,KAAH,GAAWK,SAN9B;AAOE,IAAA,SAAS,EAAEvB,EAAE,CAACsB,OAAD,EAAUL,SAAV;AAPf,KAQMI,IARN,GAUGP,QAAQ,IAAI,CAACJ,OAAb,GAAuBI,QAAvB,GAAkC,IAVrC,EAWGJ,OAAO,iBACN,oBAAC,OAAD;AACE,IAAA,SAAS,EAAEV,EAAE,CACXY,WAAW,GAAG,UAAH,GAAgB,UADhB,EAEXA,WAAW,YAAY,MAFZ,CADf;AAKE,IAAA,IAAI,EAAC;AALP,IAZJ,EAoBGF,OAAO,GACJE,WAAW,iBAAI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA6BI,QAA7B,CADX,GAEJA,QAtBN,EAuBGD,SAAS,IAAI,CAACL,OAAd,GAAwBK,SAAxB,GAAoC,IAvBvC,CADF;AA2BD,CApDmB,CAAf;;AAuDP,IAAId,OAAJ,EAAa;AACXG,EAAAA,MAAM,CAACoB,WAAP,GAAqB,QAArB;AACD","sourcesContent":["import { Spinner } from \"@vechaiui/spinner\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\n\nimport { useButtonClass } from \"./styles\";\n\ninterface IButtonProps extends DefaultProps {\n  /* Shows loading spinner */\n  loading?: boolean;\n  /* Makes button disabled */\n  disabled?: boolean;\n  /* Makes button active */\n  active?: boolean;\n  /* The label to show in the button when loading is true */\n  loadingText?: string;\n  /* Set the original html type of button */\n  type?: \"button\" | \"reset\" | \"submit\";\n  /* Adds icon before button label */\n  leftIcon?: React.ReactElement;\n  /* Adds icon after button label */\n  rightIcon?: React.ReactElement;\n  /* Set the button color */\n  color?: string;\n  /* Size of the button */\n  size?: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\n  /** Controls button appearance */\n  variant?: \"link\" | \"solid\" | \"outline\" | \"light\" | \"ghost\";\n  /* React node */\n  children?: React.ReactNode;\n}\n\nexport interface ButtonProps\n  extends React.HTMLAttributes<HTMLButtonElement>,\n    IButtonProps {}\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (props, ref) => {\n    const {\n      disabled: _disabled,\n      loading,\n      active,\n      loadingText,\n      type,\n      leftIcon,\n      rightIcon,\n      children,\n      className,\n      color,\n      variant = \"outline\",\n      size = \"md\",\n      ...rest\n    } = props;\n\n    const disabled = _disabled || loading;\n    const classes = useButtonClass({\n      variant,\n      size,\n      disabled,\n    });\n\n    return (\n      <button\n        ref={ref}\n        disabled={disabled}\n        aria-disabled={disabled}\n        type={type}\n        data-active={active ? \"true\" : undefined}\n        data-color={color ? color : undefined}\n        className={cx(classes, className)}\n        {...rest}\n      >\n        {leftIcon && !loading ? leftIcon : null}\n        {loading && (\n          <Spinner\n            className={cx(\n              loadingText ? \"relative\" : \"absolute\",\n              loadingText ? `mr-2` : \"mr-0\"\n            )}\n            size=\"sm\"\n          />\n        )}\n        {loading\n          ? loadingText || <span className=\"opacity-0\">{children}</span>\n          : children}\n        {rightIcon && !loading ? rightIcon : null}\n      </button>\n    );\n  }\n);\n\nif (__DEV__) {\n  Button.displayName = \"Button\";\n}\n"],"file":"button.js"}