{"version":3,"sources":["../../src/ToastManager.tsx"],"names":["defaultState","top","bottom","ToastManager","props","state","notify","message","options","toast","createToastState","position","isTop","includes","setState","prev","id","closeAll","Object","keys","forEach","pos","p","closeToast","idCounter","hasOwnProperty","showing","duration","onRequestRemove","removeToast","String","type","map","requestClose","filter","getStyle","style","maxWidth","zIndex","pointerEvents","margin","textAlign","right","left","render","toasts","React","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Message,\n  PositionsType,\n  MessageType,\n  MessageOptions,\n  MessageProp\n} from \"./Message\";\n\ninterface Props {\n  notify: (fn: Function, closeAll: Function, close: Function) => void;\n}\n\nexport interface MessageOptionalOptions {\n  type?: MessageType;\n  duration?: number | null;\n  position?: PositionsType;\n}\n\ninterface ToastArgs extends MessageOptions {\n  message: MessageProp;\n}\n\ntype State = {\n  top: Array<ToastArgs>;\n  \"top-left\": Array<ToastArgs>;\n  \"top-right\": Array<ToastArgs>;\n  \"bottom-left\": Array<ToastArgs>;\n  bottom: Array<ToastArgs>;\n  \"bottom-right\": Array<ToastArgs>;\n};\n\nconst defaultState: State = {\n  top: [],\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  bottom: [],\n  \"bottom-right\": []\n};\n\ntype Keys = keyof State;\n\nexport default class ToastManager extends React.Component<Props, State> {\n  static idCounter = 0;\n\n  state: State = defaultState;\n\n  constructor(props: Props) {\n    super(props);\n    props.notify(this.notify, this.closeAll, this.closeToast);\n  }\n\n  notify = (message: MessageProp, options: MessageOptionalOptions) => {\n    const toast = this.createToastState(message, options);\n    const { position } = toast;\n\n    // prepend the toast for toasts positioned at the top of\n    // the screen, otherwise append it.\n    const isTop = position.includes(\"top\");\n\n    this.setState(prev => {\n      return {\n        ...prev,\n        [position]: isTop\n          ? [toast, ...prev[position]]\n          : [...prev[position], toast]\n      };\n    });\n    return { id: toast.id, position: toast.position };\n  };\n\n  closeAll = () => {\n    Object.keys(this.state).forEach(pos => {\n      const p = pos as keyof State;\n      const position = this.state[p];\n      position.forEach((toast: any) => {\n        this.closeToast(toast.id, p);\n      });\n    });\n  };\n\n  createToastState = (\n    message: MessageProp,\n    options: MessageOptionalOptions\n  ) => {\n    const id = ++ToastManager.idCounter;\n\n    // a bit messy, but object.position returns a number because\n    // it's a method argument.\n    const position =\n      options.hasOwnProperty(\"position\") && typeof options.position === \"string\"\n        ? options.position\n        : \"top\";\n\n    return {\n      id,\n      message,\n      position,\n      showing: true,\n      duration:\n        typeof options.duration === \"undefined\" ? 5000 : options.duration,\n      onRequestRemove: () => this.removeToast(String(id), position),\n      type: options.type\n    };\n  };\n\n  closeToast = (id: string, position: PositionsType) => {\n    this.setState(prev => {\n      return {\n        ...prev,\n        [position]: prev[position].map(toast => {\n          if (toast.id !== id) return toast;\n          return {\n            ...toast,\n            requestClose: true\n          };\n        })\n      };\n    });\n  };\n\n  // actually fully remove the toast\n  removeToast = (id: string, position: PositionsType) => {\n    this.setState(prev => {\n      return {\n        ...prev,\n        [position]: prev[position].filter(toast => toast.id !== id)\n      };\n    });\n  };\n\n  getStyle = (position: PositionsType) => {\n    let style: React.CSSProperties = {\n      maxWidth: \"560px\",\n      position: \"fixed\",\n      zIndex: 5500,\n      pointerEvents: \"none\"\n    };\n\n    if (position === \"top\" || position === \"bottom\") {\n      style.margin = \"0 auto\";\n      style.textAlign = \"center\";\n    }\n\n    if (position.includes(\"top\")) {\n      style.top = 0;\n    }\n\n    if (position.includes(\"bottom\")) {\n      style.bottom = 0;\n    }\n\n    if (!position.includes(\"left\")) {\n      style.right = 0;\n    }\n\n    if (!position.includes(\"right\")) {\n      style.left = 0;\n    }\n\n    return style;\n  };\n\n  render() {\n    return Object.keys(this.state).map(position => {\n      const pos = position as keyof State;\n      const toasts = this.state[pos];\n      return (\n        <span\n          key={position}\n          className={\"Toaster__manager-\" + pos}\n          style={this.getStyle(pos)}\n        >\n          {toasts.map((toast: ToastArgs) => {\n            return <Message {...toast} position={pos} key={toast.id} />;\n          })}\n        </span>\n      );\n    });\n  }\n}\n"],"file":"ToastManager.js"}