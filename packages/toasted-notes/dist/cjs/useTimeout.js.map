{"version":3,"file":"useTimeout.js","names":["useTimeout","callback","delay","savedCallback","React","useRef","useEffect","current","tick","id","setTimeout","clearTimeout"],"sources":["../../src/useTimeout.ts"],"sourcesContent":["import * as React from \"react\";\n\ntype Callback = () => void;\n\nexport function useTimeout(callback: Callback, delay: number | null) {\n  const savedCallback = React.useRef<Callback | null>();\n\n  // Remember the latest callback.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      if (savedCallback.current) {\n        savedCallback.current();\n      }\n    }\n    if (delay !== null) {\n      let id = setTimeout(tick, delay);\n      return () => clearTimeout(id);\n    }\n  }, [delay]);\n}\n"],"mappings":";;;;AAAA;AAA+B;AAAA;AAIxB,SAASA,UAAU,CAACC,QAAkB,EAAEC,KAAoB,EAAE;EACnE,IAAMC,aAAa,GAAGC,KAAK,CAACC,MAAM,EAAmB;;EAErD;EACAD,KAAK,CAACE,SAAS,CAAC,YAAM;IACpBH,aAAa,CAACI,OAAO,GAAGN,QAAQ;EAClC,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACAG,KAAK,CAACE,SAAS,CAAC,YAAM;IACpB,SAASE,IAAI,GAAG;MACd,IAAIL,aAAa,CAACI,OAAO,EAAE;QACzBJ,aAAa,CAACI,OAAO,EAAE;MACzB;IACF;IACA,IAAIL,KAAK,KAAK,IAAI,EAAE;MAClB,IAAIO,EAAE,GAAGC,UAAU,CAACF,IAAI,EAAEN,KAAK,CAAC;MAChC,OAAO;QAAA,OAAMS,YAAY,CAACF,EAAE,CAAC;MAAA;IAC/B;EACF,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;AACb"}