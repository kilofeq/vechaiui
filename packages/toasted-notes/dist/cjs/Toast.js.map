{"version":3,"file":"Toast.js","names":["isBrowser","window","document","PORTAL_ID","Toaster","createNotification","removeAll","closeToast","closeAll","bindNotify","fn","notify","message","options","close","id","position","portalElement","existingPortalElement","getElementById","el","createElement","className","body","appendChild","root","createRoot","render"],"sources":["../../src/Toast.tsx"],"sourcesContent":["import { createRoot } from 'react-dom/client'\nimport * as React from \"react\";\nimport ToastManager, { MessageOptionalOptions } from \"./ToastManager\";\nimport { MessageProp, PositionsType } from \"./Message\";\n\nconst isBrowser =\n  typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nconst PORTAL_ID = \"react-toast\";\n\nclass Toaster {\n  createNotification?: Function;\n  removeAll?: Function;\n  closeToast?: Function;\n\n  constructor() {\n    if (!isBrowser) {\n      return;\n    }\n\n    let portalElement;\n    const existingPortalElement = document.getElementById(PORTAL_ID);\n\n    if (existingPortalElement) {\n      portalElement = existingPortalElement;\n    } else {\n      const el = document.createElement(\"div\");\n      el.id = PORTAL_ID;\n      el.className = \"Toaster\";\n      if (document.body != null) {\n        document.body.appendChild(el);\n      }\n      portalElement = el;\n    }\n    const root = createRoot(portalElement);\n    root.render(\n      <ToastManager notify={this.bindNotify as any} />\n    )\n  }\n\n  closeAll = () => {\n    if (this.removeAll) {\n      this.removeAll();\n    }\n  };\n\n  bindNotify = (fn: Function, removeAll: Function, closeToast: Function) => {\n    this.createNotification = fn;\n    this.removeAll = removeAll;\n    this.closeToast = closeToast;\n  };\n\n  notify = (message: MessageProp, options: MessageOptionalOptions = {}) => {\n    if (this.createNotification) {\n      return this.createNotification(message, options);\n    }\n  };\n\n  close = (id: number, position: PositionsType) => {\n    if(this.closeToast){\n      this.closeToast(id, position);\n    }\n  }\n}\n\nexport default Toaster;\n"],"mappings":";;;;AAAA;AACA;AACA;AAAsE;AAAA;AAAA;AAGtE,IAAMA,SAAS,GACb,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,WAAW;AACzE,IAAMC,SAAS,GAAG,aAAa;AAAC,IAE1BC,OAAO,GAKX,mBAAc;EAAA;EAAA,KAJdC,kBAAkB;EAAA,KAClBC,SAAS;EAAA,KACTC,UAAU;EAAA,KA2BVC,QAAQ,GAAG,YAAM;IACf,IAAI,KAAI,CAACF,SAAS,EAAE;MAClB,KAAI,CAACA,SAAS,EAAE;IAClB;EACF,CAAC;EAAA,KAEDG,UAAU,GAAG,UAACC,EAAY,EAAEJ,SAAmB,EAAEC,UAAoB,EAAK;IACxE,KAAI,CAACF,kBAAkB,GAAGK,EAAE;IAC5B,KAAI,CAACJ,SAAS,GAAGA,SAAS;IAC1B,KAAI,CAACC,UAAU,GAAGA,UAAU;EAC9B,CAAC;EAAA,KAEDI,MAAM,GAAG,UAACC,OAAoB,EAAEC,OAA+B,EAAU;IAAA,IAAzCA,OAA+B;MAA/BA,OAA+B,GAAG,CAAC,CAAC;IAAA;IAClE,IAAI,KAAI,CAACR,kBAAkB,EAAE;MAC3B,OAAO,KAAI,CAACA,kBAAkB,CAACO,OAAO,EAAEC,OAAO,CAAC;IAClD;EACF,CAAC;EAAA,KAEDC,KAAK,GAAG,UAACC,EAAU,EAAEC,QAAuB,EAAK;IAC/C,IAAG,KAAI,CAACT,UAAU,EAAC;MACjB,KAAI,CAACA,UAAU,CAACQ,EAAE,EAAEC,QAAQ,CAAC;IAC/B;EACF,CAAC;EA9CC,IAAI,CAAChB,SAAS,EAAE;IACd;EACF;EAEA,IAAIiB,aAAa;EACjB,IAAMC,qBAAqB,GAAGhB,QAAQ,CAACiB,cAAc,CAAChB,SAAS,CAAC;EAEhE,IAAIe,qBAAqB,EAAE;IACzBD,aAAa,GAAGC,qBAAqB;EACvC,CAAC,MAAM;IACL,IAAME,EAAE,GAAGlB,QAAQ,CAACmB,aAAa,CAAC,KAAK,CAAC;IACxCD,EAAE,CAACL,EAAE,GAAGZ,SAAS;IACjBiB,EAAE,CAACE,SAAS,GAAG,SAAS;IACxB,IAAIpB,QAAQ,CAACqB,IAAI,IAAI,IAAI,EAAE;MACzBrB,QAAQ,CAACqB,IAAI,CAACC,WAAW,CAACJ,EAAE,CAAC;IAC/B;IACAH,aAAa,GAAGG,EAAE;EACpB;EACA,IAAMK,IAAI,GAAG,IAAAC,kBAAU,EAACT,aAAa,CAAC;EACtCQ,IAAI,CAACE,MAAM,eACT,oBAAC,wBAAY;IAAC,MAAM,EAAE,IAAI,CAAClB;EAAkB,EAAG,CACjD;AACH,CAAC;AAAA,eA2BYL,OAAO;AAAA"}