{"version":3,"file":"switch.js","names":["Switch","React","forwardRef","props","ref","id","name","value","ariaLabel","ariaLabelledBy","color","defaultChecked","checked","size","onChange","children","className","rest","useFormControl","disabled","invalid","switchClasses","useSwitchClass","switchBoxClasses","useSwitchBoxClass","cx","undefined","__DEV__","displayName"],"sources":["../../src/switch.tsx"],"sourcesContent":["import { useFormControl } from \"@vechaiui/forms\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, __DEV__ } from \"@vechaiui/utils\";\nimport VisuallyHidden from \"@vechaiui/visually-hidden\";\nimport * as React from \"react\";\n\nimport { useSwitchClass, useSwitchBoxClass } from \"./styles\";\n\nexport interface SwitchProps<T = HTMLInputElement> extends DefaultProps {\n  /* Makes switch disabled */\n  disabled?: React.InputHTMLAttributes<T>[\"disabled\"];\n  /* Makes switch invalid */\n  invalid?: boolean;\n  /**\n   * If `true`, the switch will be initially checked.\n   */\n  defaultChecked?: boolean;\n  /**\n   * If `true`, the switch will be checked.\n   * You'll need to pass `onChange` to update it's value (since it's now controlled)\n   */\n  checked?: boolean;\n  /**\n   * The callback invoked when the checked state of the `switch` changes..\n   */\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  /* Switch id */\n  id?: string;\n  /* Switch name */\n  name?: string;\n  /* Switch value */\n  value?: string | number;\n  /* Size of the switch */\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\";\n  /* Set the switch color */\n  color?: string;\n  /**\n   * A11y: A label that describes the input\n   */\n  \"aria-label\"?: string;\n  /**\n   * A11y: The id of the element that describes the input\n   */\n  \"aria-describedby\"?: string;\n  /**\n   * A11y: Refers to the id of the element that labels the switch element.\n   */\n  \"aria-labelledby\"?: string;\n  /**\n   * The children is the label to be displayed to the right of the switch.\n   */\n  children?: React.ReactNode;\n}\n\nexport const Switch = React.forwardRef<HTMLInputElement, SwitchProps>(\n  (props, ref) => {\n    const {\n      id,\n      name,\n      value,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      color = \"primary\",\n      defaultChecked,\n      checked,\n      size = \"md\",\n\n      onChange,\n      children,\n      className,\n      ...rest\n    } = props;\n\n    const { disabled, invalid } = useFormControl(props);\n\n    const switchClasses = useSwitchClass({\n      size,\n      disabled,\n      checked,\n    });\n\n    const switchBoxClasses = useSwitchBoxClass({\n      size,\n      checked,\n    });\n\n    return (\n      <label className=\"form-switch-label\" {...rest}>\n        <VisuallyHidden\n          as=\"input\"\n          type=\"checkbox\"\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          id={id}\n          ref={ref}\n          name={name}\n          value={value}\n          aria-invalid={invalid}\n          defaultChecked={defaultChecked}\n          onChange={onChange}\n          checked={checked}\n          data-disabled={disabled}\n          disabled={disabled}\n        />\n        <div\n          className={cx(switchClasses, className)}\n          data-disabled={disabled}\n          data-color={color ? color : undefined}\n        >\n          <div className={cx(switchBoxClasses)} />\n        </div>\n      </label>\n    );\n  }\n);\n\nif (__DEV__) {\n  Switch.displayName = \"Switch\";\n}\n"],"mappings":";;;;AAAA;AAEA;AACA;AACA;AAEA;AAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAgDtD,IAAMA,MAAM,gBAAGC,KAAK,CAACC,UAAU,CACpC,UAACC,KAAK,EAAEC,GAAG,EAAK;EACd,IACEC,EAAE,GAcAF,KAAK,CAdPE,EAAE;IACFC,IAAI,GAaFH,KAAK,CAbPG,IAAI;IACJC,KAAK,GAYHJ,KAAK,CAZPI,KAAK;IACSC,SAAS,GAWrBL,KAAK,CAXP,YAAY;IACOM,cAAc,GAU/BN,KAAK,CAVP,iBAAiB;IAAA,eAUfA,KAAK,CATPO,KAAK;IAALA,KAAK,6BAAG,SAAS;IACjBC,cAAc,GAQZR,KAAK,CARPQ,cAAc;IACdC,OAAO,GAOLT,KAAK,CAPPS,OAAO;IAAA,cAOLT,KAAK,CANPU,IAAI;IAAJA,IAAI,4BAAG,IAAI;IAEXC,QAAQ,GAINX,KAAK,CAJPW,QAAQ;IACRC,QAAQ,GAGNZ,KAAK,CAHPY,QAAQ;IACRC,SAAS,GAEPb,KAAK,CAFPa,SAAS;IACNC,IAAI,iCACLd,KAAK;EAET,sBAA8B,IAAAe,qBAAc,EAACf,KAAK,CAAC;IAA3CgB,QAAQ,mBAARA,QAAQ;IAAEC,OAAO,mBAAPA,OAAO;EAEzB,IAAMC,aAAa,GAAG,IAAAC,sBAAc,EAAC;IACnCT,IAAI,EAAJA,IAAI;IACJM,QAAQ,EAARA,QAAQ;IACRP,OAAO,EAAPA;EACF,CAAC,CAAC;EAEF,IAAMW,gBAAgB,GAAG,IAAAC,yBAAiB,EAAC;IACzCX,IAAI,EAAJA,IAAI;IACJD,OAAO,EAAPA;EACF,CAAC,CAAC;EAEF,oBACE;IAAO,SAAS,EAAC;EAAmB,GAAKK,IAAI,gBAC3C,oBAAC,0BAAc;IACb,EAAE,EAAC,OAAO;IACV,IAAI,EAAC,UAAU;IACf,cAAYT,SAAU;IACtB,mBAAiBC,cAAe;IAChC,EAAE,EAAEJ,EAAG;IACP,GAAG,EAAED,GAAI;IACT,IAAI,EAAEE,IAAK;IACX,KAAK,EAAEC,KAAM;IACb,gBAAca,OAAQ;IACtB,cAAc,EAAET,cAAe;IAC/B,QAAQ,EAAEG,QAAS;IACnB,OAAO,EAAEF,OAAQ;IACjB,iBAAeO,QAAS;IACxB,QAAQ,EAAEA;EAAS,EACnB,eACF;IACE,SAAS,EAAE,IAAAM,SAAE,EAACJ,aAAa,EAAEL,SAAS,CAAE;IACxC,iBAAeG,QAAS;IACxB,cAAYT,KAAK,GAAGA,KAAK,GAAGgB;EAAU,gBAEtC;IAAK,SAAS,EAAE,IAAAD,SAAE,EAACF,gBAAgB;EAAE,EAAG,CACpC,CACA;AAEZ,CAAC,CACF;AAAC;AAEF,IAAII,cAAO,EAAE;EACX3B,MAAM,CAAC4B,WAAW,GAAG,QAAQ;AAC/B"}