{"version":3,"file":"avatar-group.js","names":["cx","getValidChildren","__DEV__","React","Avatar","AvatarGroup","size","children","max","className","rest","validChildren","childrenWithinMax","slice","excess","length","reversedChildren","reverse","clones","map","child","index","isFirstAvatar","cloneElement","props","bordered","displayName"],"sources":["../../src/avatar-group.tsx"],"sourcesContent":["import { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, getValidChildren, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\n\nimport { Avatar, AvatarProps } from \"./avatar\";\n\ninterface IAvatarGroupProps extends DefaultProps {\n  /**\n   * The children of the avatar group.\n   */\n  children: React.ReactNode;\n  /**\n   * The maximum number of visible avatars\n   */\n  max?: number;\n  /* Set all wrapped avatar size */\n  size?: AvatarProps[\"size\"];\n}\n\nexport interface AvatarGroupProps\n  extends IAvatarGroupProps,\n    Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {}\n\nexport const AvatarGroup: React.FC<AvatarGroupProps> = ({\n  size,\n  children,\n  max,\n  className,\n  ...rest\n}) => {\n  const validChildren = getValidChildren(children);\n\n  /**\n   * get the avatars within the max\n   */\n  const childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n\n  /**\n   * get the remaining avatar count\n   */\n  const excess = max != null && validChildren.length - max;\n\n  /**\n   * Reversing the children is a great way to avoid using zIndex\n   * to overlap the avatars\n   */\n  const reversedChildren = childrenWithinMax.reverse();\n\n  const clones = reversedChildren.map((child, index) => {\n    let isFirstAvatar = index === 0;\n    return React.cloneElement(child, {\n      size,\n      className: cx(child.props.className, isFirstAvatar ? \"mr-0\" : \"-mr-3\"),\n      bordered: true,\n    });\n  });\n\n  return (\n    <div role=\"group\" className={cx(\"avatar-group\", className)} {...rest}>\n      {excess > 0 && (\n        <Avatar\n          size={size}\n          name={`+${excess}`}\n          className=\"-ml-3\"\n          isFullName\n          bordered\n        />\n      )}\n      {clones}\n    </div>\n  );\n};\n\nif (__DEV__) {\n  AvatarGroup.displayName = \"AvatarGroup\";\n}\n"],"mappings":";;;AACA,SAASA,EAAE,EAAEC,gBAAgB,EAAEC,OAAO,QAAQ,iBAAiB;AAC/D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,MAAM,QAAqB,UAAU;AAmB9C,OAAO,IAAMC,WAAuC,GAAG,QAMjD;EAAA,IANkD;MACtDC,IAAI;MACJC,QAAQ;MACRC,GAAG;MACHC;IAEF,CAAC;IADIC,IAAI;EAEP,IAAMC,aAAa,GAAGV,gBAAgB,CAACM,QAAQ,CAAC;;EAEhD;AACF;AACA;EACE,IAAMK,iBAAiB,GAAGJ,GAAG,GAAGG,aAAa,CAACE,KAAK,CAAC,CAAC,EAAEL,GAAG,CAAC,GAAGG,aAAa;;EAE3E;AACF;AACA;EACE,IAAMG,MAAM,GAAGN,GAAG,IAAI,IAAI,IAAIG,aAAa,CAACI,MAAM,GAAGP,GAAG;;EAExD;AACF;AACA;AACA;EACE,IAAMQ,gBAAgB,GAAGJ,iBAAiB,CAACK,OAAO,EAAE;EAEpD,IAAMC,MAAM,GAAGF,gBAAgB,CAACG,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;IACpD,IAAIC,aAAa,GAAGD,KAAK,KAAK,CAAC;IAC/B,oBAAOlB,KAAK,CAACoB,YAAY,CAACH,KAAK,EAAE;MAC/Bd,IAAI;MACJG,SAAS,EAAET,EAAE,CAACoB,KAAK,CAACI,KAAK,CAACf,SAAS,EAAEa,aAAa,GAAG,MAAM,GAAG,OAAO,CAAC;MACtEG,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,oBACE;IAAK,IAAI,EAAC,OAAO;IAAC,SAAS,EAAEzB,EAAE,CAAC,cAAc,EAAES,SAAS;EAAE,GAAKC,IAAI,GACjEI,MAAM,GAAG,CAAC,iBACT,oBAAC,MAAM;IACL,IAAI,EAAER,IAAK;IACX,IAAI,QAAMQ,MAAS;IACnB,SAAS,EAAC,OAAO;IACjB,UAAU;IACV,QAAQ;EAAA,EAEX,EACAI,MAAM,CACH;AAEV,CAAC;AAED,IAAIhB,OAAO,EAAE;EACXG,WAAW,CAACqB,WAAW,GAAG,aAAa;AACzC"}