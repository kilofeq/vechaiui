{"version":3,"file":"avatar-group.js","names":["AvatarGroup","size","children","max","className","rest","validChildren","getValidChildren","childrenWithinMax","slice","excess","length","reversedChildren","reverse","clones","map","child","index","isFirstAvatar","React","cloneElement","cx","props","bordered","__DEV__","displayName"],"sources":["../../src/avatar-group.tsx"],"sourcesContent":["import { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, getValidChildren, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\n\nimport { Avatar, AvatarProps } from \"./avatar\";\n\ninterface IAvatarGroupProps extends DefaultProps {\n  /**\n   * The children of the avatar group.\n   */\n  children: React.ReactNode;\n  /**\n   * The maximum number of visible avatars\n   */\n  max?: number;\n  /* Set all wrapped avatar size */\n  size?: AvatarProps[\"size\"];\n}\n\nexport interface AvatarGroupProps\n  extends IAvatarGroupProps,\n    Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {}\n\nexport const AvatarGroup: React.FC<AvatarGroupProps> = ({\n  size,\n  children,\n  max,\n  className,\n  ...rest\n}) => {\n  const validChildren = getValidChildren(children);\n\n  /**\n   * get the avatars within the max\n   */\n  const childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n\n  /**\n   * get the remaining avatar count\n   */\n  const excess = max != null && validChildren.length - max;\n\n  /**\n   * Reversing the children is a great way to avoid using zIndex\n   * to overlap the avatars\n   */\n  const reversedChildren = childrenWithinMax.reverse();\n\n  const clones = reversedChildren.map((child, index) => {\n    let isFirstAvatar = index === 0;\n    return React.cloneElement(child, {\n      size,\n      className: cx(child.props.className, isFirstAvatar ? \"mr-0\" : \"-mr-3\"),\n      bordered: true,\n    });\n  });\n\n  return (\n    <div role=\"group\" className={cx(\"avatar-group\", className)} {...rest}>\n      {excess > 0 && (\n        <Avatar\n          size={size}\n          name={`+${excess}`}\n          className=\"-ml-3\"\n          isFullName\n          bordered\n        />\n      )}\n      {clones}\n    </div>\n  );\n};\n\nif (__DEV__) {\n  AvatarGroup.displayName = \"AvatarGroup\";\n}\n"],"mappings":";;;;AACA;AACA;AAEA;AAA+C;AAAA;AAAA;AAAA;AAAA;AAmBxC,IAAMA,WAAuC,GAAG,SAA1CA,WAAuC,OAM9C;EAAA,IALJC,IAAI,QAAJA,IAAI;IACJC,QAAQ,QAARA,QAAQ;IACRC,GAAG,QAAHA,GAAG;IACHC,SAAS,QAATA,SAAS;IACNC,IAAI;EAEP,IAAMC,aAAa,GAAG,IAAAC,uBAAgB,EAACL,QAAQ,CAAC;;EAEhD;AACF;AACA;EACE,IAAMM,iBAAiB,GAAGL,GAAG,GAAGG,aAAa,CAACG,KAAK,CAAC,CAAC,EAAEN,GAAG,CAAC,GAAGG,aAAa;;EAE3E;AACF;AACA;EACE,IAAMI,MAAM,GAAGP,GAAG,IAAI,IAAI,IAAIG,aAAa,CAACK,MAAM,GAAGR,GAAG;;EAExD;AACF;AACA;AACA;EACE,IAAMS,gBAAgB,GAAGJ,iBAAiB,CAACK,OAAO,EAAE;EAEpD,IAAMC,MAAM,GAAGF,gBAAgB,CAACG,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAK;IACpD,IAAIC,aAAa,GAAGD,KAAK,KAAK,CAAC;IAC/B,oBAAOE,KAAK,CAACC,YAAY,CAACJ,KAAK,EAAE;MAC/Bf,IAAI,EAAJA,IAAI;MACJG,SAAS,EAAE,IAAAiB,SAAE,EAACL,KAAK,CAACM,KAAK,CAAClB,SAAS,EAAEc,aAAa,GAAG,MAAM,GAAG,OAAO,CAAC;MACtEK,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,oBACE;IAAK,IAAI,EAAC,OAAO;IAAC,SAAS,EAAE,IAAAF,SAAE,EAAC,cAAc,EAAEjB,SAAS;EAAE,GAAKC,IAAI,GACjEK,MAAM,GAAG,CAAC,iBACT,oBAAC,cAAM;IACL,IAAI,EAAET,IAAK;IACX,IAAI,QAAMS,MAAS;IACnB,SAAS,EAAC,OAAO;IACjB,UAAU;IACV,QAAQ;EAAA,EAEX,EACAI,MAAM,CACH;AAEV,CAAC;AAAC;AAEF,IAAIU,cAAO,EAAE;EACXxB,WAAW,CAACyB,WAAW,GAAG,aAAa;AACzC"}