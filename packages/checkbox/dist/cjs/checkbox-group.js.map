{"version":3,"file":"checkbox-group.js","names":["CheckboxGroup","React","forwardRef","props","ref","onChange","name","color","size","defaultValue","inline","valueProp","value","children","rest","useState","values","setValues","useRef","isControlled","current","_values","_onChange","event","target","checked","newValues","filter","val","fallbackName","useId","_name","validChildren","getValidChildren","clones","map","child","index","cx","className","cloneElement","includes","__DEV__","displayName"],"sources":["../../src/checkbox-group.tsx"],"sourcesContent":["import { useId } from \"@reach/auto-id\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, getValidChildren, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\nimport { cloneElement, useRef, useState } from \"react\";\n\nimport { CheckboxProps } from \"./checkbox\";\n\nexport interface CheckboxGroupProps extends DefaultProps {\n  /**\n   * The id of the checkbox group.\n   */\n  id?: CheckboxProps[\"id\"];\n  /**\n   * The name of the checkbox group. This prop is passed to each checbox\n   */\n  name?: CheckboxProps[\"name\"];\n  /**\n   * The content of the checkbox group. Must be the `Checkbox` component\n   */\n  children?: React.ReactNode;\n  /**\n   * The initial value of the checkbox group\n   */\n  defaultValue?: Array<CheckboxProps[\"value\"]>;\n  /**\n   * The value of the checkbox group\n   */\n  value?: Array<CheckboxProps[\"value\"]>;\n  /**\n   * The callback fired when any children Checkbox is checked or unchecked\n   */\n  onChange?: (value: Array<CheckboxProps[\"value\"]>) => void;\n  /**\n   * If `true`, the checkboxes will aligned horizontally.\n   */\n  inline?: boolean;\n  /* Size of all wrapped checkbox */\n  size?: CheckboxProps[\"size\"];\n  /* Color of all wrapped checkbox */\n  color?: CheckboxProps[\"color\"];\n}\n\nexport const CheckboxGroup = React.forwardRef<HTMLDivElement, CheckboxGroupProps>(\n  (props, ref) => {\n    const {\n      onChange,\n      name,\n      color,\n      size,\n      defaultValue,\n      inline,\n      value: valueProp,\n      children,\n      ...rest\n    } = props;\n    const [values, setValues] = useState(defaultValue || []);\n\n    const { current: isControlled } = useRef(valueProp != null);\n    const _values = isControlled ? valueProp : values;\n\n    const _onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { checked, value } = event.target;\n      let newValues;\n      if (checked) {\n        newValues = [...(_values || []), value];\n      } else {\n        newValues = (_values || []).filter((val) => val !== value);\n      }\n\n      !isControlled && setValues(newValues);\n      onChange && onChange(newValues);\n    };\n\n    // If no name is passed, we'll generate a random, unique name\n    const fallbackName = `checkbox-${useId()}`;\n    const _name = name || fallbackName;\n\n    const validChildren = getValidChildren(children);\n\n    const clones = validChildren.map((child, index) => {\n      return (\n        <div\n          key={index}\n          className={cx(\n            inline ? \"inline-block\" : \"block\",\n            child.props.className\n          )}\n        >\n          {cloneElement(child, {\n            size: size,\n            color: child.props.color || color,\n            name: `${_name}-${index}`,\n            onChange: _onChange,\n            checked: (_values || []).includes(child.props.value),\n          })}\n        </div>\n      );\n    });\n\n    return (\n      <div role=\"group\" ref={ref} {...rest}>\n        {clones}\n      </div>\n    );\n  }\n);\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n"],"mappings":";;;;AAAA;AAEA;AACA;AAA+B;AAAA;AAAA;AAAA;AAAA;AAwCxB,IAAMA,aAAa,gBAAGC,KAAK,CAACC,UAAU,CAC3C,UAACC,KAAK,EAAEC,GAAG,EAAK;EACd,IACEC,QAAQ,GASNF,KAAK,CATPE,QAAQ;IACRC,IAAI,GAQFH,KAAK,CARPG,IAAI;IACJC,KAAK,GAOHJ,KAAK,CAPPI,KAAK;IACLC,IAAI,GAMFL,KAAK,CANPK,IAAI;IACJC,YAAY,GAKVN,KAAK,CALPM,YAAY;IACZC,MAAM,GAIJP,KAAK,CAJPO,MAAM;IACCC,SAAS,GAGdR,KAAK,CAHPS,KAAK;IACLC,QAAQ,GAENV,KAAK,CAFPU,QAAQ;IACLC,IAAI,iCACLX,KAAK;EACT,gBAA4B,IAAAY,cAAQ,EAACN,YAAY,IAAI,EAAE,CAAC;IAAjDO,MAAM;IAAEC,SAAS;EAExB,cAAkC,IAAAC,YAAM,EAACP,SAAS,IAAI,IAAI,CAAC;IAA1CQ,YAAY,WAArBC,OAAO;EACf,IAAMC,OAAO,GAAGF,YAAY,GAAGR,SAAS,GAAGK,MAAM;EAEjD,IAAMM,SAAS,GAAG,SAAZA,SAAS,CAAIC,KAA0C,EAAK;IAChE,oBAA2BA,KAAK,CAACC,MAAM;MAA/BC,OAAO,iBAAPA,OAAO;MAAEb,KAAK,iBAALA,KAAK;IACtB,IAAIc,SAAS;IACb,IAAID,OAAO,EAAE;MACXC,SAAS,aAAQL,OAAO,IAAI,EAAE,GAAGT,KAAK,EAAC;IACzC,CAAC,MAAM;MACLc,SAAS,GAAG,CAACL,OAAO,IAAI,EAAE,EAAEM,MAAM,CAAC,UAACC,GAAG;QAAA,OAAKA,GAAG,KAAKhB,KAAK;MAAA,EAAC;IAC5D;IAEA,CAACO,YAAY,IAAIF,SAAS,CAACS,SAAS,CAAC;IACrCrB,QAAQ,IAAIA,QAAQ,CAACqB,SAAS,CAAC;EACjC,CAAC;;EAED;EACA,IAAMG,YAAY,iBAAe,IAAAC,aAAK,GAAI;EAC1C,IAAMC,KAAK,GAAGzB,IAAI,IAAIuB,YAAY;EAElC,IAAMG,aAAa,GAAG,IAAAC,uBAAgB,EAACpB,QAAQ,CAAC;EAEhD,IAAMqB,MAAM,GAAGF,aAAa,CAACG,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAK;IACjD,oBACE;MACE,GAAG,EAAEA,KAAM;MACX,SAAS,EAAE,IAAAC,SAAE,EACX5B,MAAM,GAAG,cAAc,GAAG,OAAO,EACjC0B,KAAK,CAACjC,KAAK,CAACoC,SAAS;IACrB,gBAED,IAAAC,kBAAY,EAACJ,KAAK,EAAE;MACnB5B,IAAI,EAAEA,IAAI;MACVD,KAAK,EAAE6B,KAAK,CAACjC,KAAK,CAACI,KAAK,IAAIA,KAAK;MACjCD,IAAI,EAAKyB,KAAK,SAAIM,KAAO;MACzBhC,QAAQ,EAAEiB,SAAS;MACnBG,OAAO,EAAE,CAACJ,OAAO,IAAI,EAAE,EAAEoB,QAAQ,CAACL,KAAK,CAACjC,KAAK,CAACS,KAAK;IACrD,CAAC,CAAC,CACE;EAEV,CAAC,CAAC;EAEF,oBACE;IAAK,IAAI,EAAC,OAAO;IAAC,GAAG,EAAER;EAAI,GAAKU,IAAI,GACjCoB,MAAM,CACH;AAEV,CAAC,CACF;AAAC;AAEF,IAAIQ,cAAO,EAAE;EACX1C,aAAa,CAAC2C,WAAW,GAAG,eAAe;AAC7C"}