{"version":3,"file":"checkbox.js","names":["Checkbox","React","forwardRef","props","ref","id","name","value","ariaLabel","ariaLabelledBy","ariaDescribedby","color","defaultChecked","checked","size","onChange","indeterminate","children","className","rest","useFormControl","disabled","invalid","readOnly","checkboxClasses","useCheckboxClass","checkboxLabelClasses","useCheckboxLabelClass","ownRef","useRef","_ref","useForkRef","useEffect","current","Boolean","cx","undefined","__DEV__","displayName"],"sources":["../../src/checkbox.tsx"],"sourcesContent":["import { useFormControl } from \"@vechaiui/forms\";\nimport { cx, useForkRef, __DEV__ } from \"@vechaiui/utils\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport * as React from \"react\";\nimport { useEffect, useRef } from \"react\";\n\nimport { useCheckboxClass, useCheckboxLabelClass } from \"./styles\";\n\ninterface ICheckboxProps<T = HTMLInputElement> extends DefaultProps {\n  /* Makes checkbox disabled */\n  disabled?: React.InputHTMLAttributes<T>[\"disabled\"];\n  /* Makes checkbox invalid */\n  invalid?: boolean;\n  /* Makes checkbox required */\n  required?: React.InputHTMLAttributes<T>[\"required\"];\n  /* Makes checkbox readOnly */\n  readOnly?: React.InputHTMLAttributes<T>[\"readOnly\"];\n  /* Makes checkbox indeterminate */\n  indeterminate?: boolean;\n  /**\n   * If `true`, the checkbox will be initially checked.\n   */\n  defaultChecked?: boolean;\n  /**\n   * If `true`, the checkbox will be checked.\n   * You'll need to pass `onChange` to update it's value (since it's now controlled)\n   */\n  checked?: boolean;\n  /* Checkbox id */\n  id?: string;\n  /* Checkbox name */\n  name?: string;\n  /* Checkbox value */\n  value?: string | number;\n  /* Set the checkbox color */\n  color?: string;\n  /* Size of the checkbox */\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\";\n  /**\n   * A11y: A label that describes the input\n   */\n  \"aria-label\"?: string;\n  /**\n   * A11y: The id of the element that describes the input\n   */\n  \"aria-describedby\"?: string;\n  /**\n   * A11y: Refers to the id of the element that labels the checkbox element.\n   */\n  \"aria-labelledby\"?: string;\n  /**\n   * The children is the label to be displayed to the right of the checkbox.\n   */\n  children?: React.ReactNode;\n  /**\n   * The callback invoked when the checked state of the `Checkbox` changes..\n   */\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n}\n\nexport type CheckboxProps = ICheckboxProps &\n  React.HTMLAttributes<HTMLInputElement>;\n\nexport const Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>(\n  (props, ref) => {\n    const {\n      id,\n      name,\n      value,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-describedby\": ariaDescribedby,\n      color = \"primary\",\n      defaultChecked,\n      checked,\n      size = \"md\",\n      onChange,\n      indeterminate,\n      children,\n      className,\n      ...rest\n    } = props;\n\n    const { disabled, invalid, readOnly } = useFormControl(props);\n\n    const checkboxClasses = useCheckboxClass({\n      size,\n      disabled,\n    });\n\n    const checkboxLabelClasses = useCheckboxLabelClass({ size });\n\n    const ownRef = useRef();\n    const _ref = useForkRef(ownRef, ref);\n\n    useEffect(() => {\n      // @ts-ignore\n      if (ownRef.current) {\n        // @ts-ignore\n        ownRef.current.indeterminate = Boolean(indeterminate);\n      }\n    }, [indeterminate, _ref]);\n\n    return (\n      <label\n        className={cx(\n          \"inline-flex align-top items-center cursor-base\",\n          disabled && \"cursor-not-allowed\"\n        )}\n      >\n        <input\n          type=\"checkbox\"\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          aria-describedby={ariaDescribedby}\n          id={id}\n          ref={_ref}\n          name={name}\n          value={value}\n          onChange={readOnly ? undefined : onChange}\n          defaultChecked={readOnly ? undefined : defaultChecked}\n          checked={\n            readOnly ? Boolean(checked) : defaultChecked ? undefined : checked\n          }\n          disabled={disabled}\n          aria-disabled={disabled}\n          readOnly={readOnly}\n          aria-readonly={readOnly}\n          aria-invalid={invalid}\n          aria-checked={indeterminate ? \"mixed\" : checked}\n          data-color={color ? color : undefined}\n          className={cx(\n            checkboxClasses,\n            readOnly || disabled ? \"opacity-80\" : \"opacity-100\",\n            className\n          )}\n          {...rest}\n        />\n        {children && (\n          <span\n            className={cx(\n              checkboxLabelClasses,\n              readOnly || disabled ? \"opacity-40\" : \"opacity-100\"\n            )}\n          >\n            {children}\n          </span>\n        )}\n      </label>\n    );\n  }\n);\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}\n"],"mappings":"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"}