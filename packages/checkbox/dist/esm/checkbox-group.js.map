{"version":3,"file":"checkbox-group.js","names":["useId","cx","getValidChildren","__DEV__","React","cloneElement","useRef","useState","CheckboxGroup","forwardRef","props","ref","onChange","name","color","size","defaultValue","inline","value","valueProp","children","rest","values","setValues","current","isControlled","_values","_onChange","event","checked","target","newValues","filter","val","fallbackName","_name","validChildren","clones","map","child","index","className","includes","displayName"],"sources":["../../src/checkbox-group.tsx"],"sourcesContent":["import { useId } from \"@reach/auto-id\";\nimport { DefaultProps } from \"@vechaiui/theme\";\nimport { cx, getValidChildren, __DEV__ } from \"@vechaiui/utils\";\nimport * as React from \"react\";\nimport { cloneElement, useRef, useState } from \"react\";\n\nimport { CheckboxProps } from \"./checkbox\";\n\nexport interface CheckboxGroupProps extends DefaultProps {\n  /**\n   * The id of the checkbox group.\n   */\n  id?: CheckboxProps[\"id\"];\n  /**\n   * The name of the checkbox group. This prop is passed to each checbox\n   */\n  name?: CheckboxProps[\"name\"];\n  /**\n   * The content of the checkbox group. Must be the `Checkbox` component\n   */\n  children?: React.ReactNode;\n  /**\n   * The initial value of the checkbox group\n   */\n  defaultValue?: Array<CheckboxProps[\"value\"]>;\n  /**\n   * The value of the checkbox group\n   */\n  value?: Array<CheckboxProps[\"value\"]>;\n  /**\n   * The callback fired when any children Checkbox is checked or unchecked\n   */\n  onChange?: (value: Array<CheckboxProps[\"value\"]>) => void;\n  /**\n   * If `true`, the checkboxes will aligned horizontally.\n   */\n  inline?: boolean;\n  /* Size of all wrapped checkbox */\n  size?: CheckboxProps[\"size\"];\n  /* Color of all wrapped checkbox */\n  color?: CheckboxProps[\"color\"];\n}\n\nexport const CheckboxGroup = React.forwardRef<HTMLDivElement, CheckboxGroupProps>(\n  (props, ref) => {\n    const {\n      onChange,\n      name,\n      color,\n      size,\n      defaultValue,\n      inline,\n      value: valueProp,\n      children,\n      ...rest\n    } = props;\n    const [values, setValues] = useState(defaultValue || []);\n\n    const { current: isControlled } = useRef(valueProp != null);\n    const _values = isControlled ? valueProp : values;\n\n    const _onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const { checked, value } = event.target;\n      let newValues;\n      if (checked) {\n        newValues = [...(_values || []), value];\n      } else {\n        newValues = (_values || []).filter((val) => val !== value);\n      }\n\n      !isControlled && setValues(newValues);\n      onChange && onChange(newValues);\n    };\n\n    // If no name is passed, we'll generate a random, unique name\n    const fallbackName = `checkbox-${useId()}`;\n    const _name = name || fallbackName;\n\n    const validChildren = getValidChildren(children);\n\n    const clones = validChildren.map((child, index) => {\n      return (\n        <div\n          key={index}\n          className={cx(\n            inline ? \"inline-block\" : \"block\",\n            child.props.className\n          )}\n        >\n          {cloneElement(child, {\n            size: size,\n            color: child.props.color || color,\n            name: `${_name}-${index}`,\n            onChange: _onChange,\n            checked: (_values || []).includes(child.props.value),\n          })}\n        </div>\n      );\n    });\n\n    return (\n      <div role=\"group\" ref={ref} {...rest}>\n        {clones}\n      </div>\n    );\n  }\n);\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n"],"mappings":";;;AAAA,SAASA,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,EAAE,EAAEC,gBAAgB,EAAEC,OAAO,QAAQ,iBAAiB;AAC/D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,YAAY,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAuCtD,OAAO,IAAMC,aAAa,gBAAGJ,KAAK,CAACK,UAAU,CAC3C,CAACC,KAAK,EAAEC,GAAG,KAAK;EACd,IAAM;MACJC,QAAQ;MACRC,IAAI;MACJC,KAAK;MACLC,IAAI;MACJC,YAAY;MACZC,MAAM;MACNC,KAAK,EAAEC,SAAS;MAChBC;IAEF,CAAC,GAAGV,KAAK;IADJW,IAAI,iCACLX,KAAK;EACT,IAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAACS,YAAY,IAAI,EAAE,CAAC;EAExD,IAAM;IAAEQ,OAAO,EAAEC;EAAa,CAAC,GAAGnB,MAAM,CAACa,SAAS,IAAI,IAAI,CAAC;EAC3D,IAAMO,OAAO,GAAGD,YAAY,GAAGN,SAAS,GAAGG,MAAM;EAEjD,IAAMK,SAAS,GAAIC,KAA0C,IAAK;IAChE,IAAM;MAAEC,OAAO;MAAEX;IAAM,CAAC,GAAGU,KAAK,CAACE,MAAM;IACvC,IAAIC,SAAS;IACb,IAAIF,OAAO,EAAE;MACXE,SAAS,GAAG,CAAC,IAAIL,OAAO,IAAI,EAAE,CAAC,EAAER,KAAK,CAAC;IACzC,CAAC,MAAM;MACLa,SAAS,GAAG,CAACL,OAAO,IAAI,EAAE,EAAEM,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAKf,KAAK,CAAC;IAC5D;IAEA,CAACO,YAAY,IAAIF,SAAS,CAACQ,SAAS,CAAC;IACrCnB,QAAQ,IAAIA,QAAQ,CAACmB,SAAS,CAAC;EACjC,CAAC;;EAED;EACA,IAAMG,YAAY,iBAAelC,KAAK,EAAI;EAC1C,IAAMmC,KAAK,GAAGtB,IAAI,IAAIqB,YAAY;EAElC,IAAME,aAAa,GAAGlC,gBAAgB,CAACkB,QAAQ,CAAC;EAEhD,IAAMiB,MAAM,GAAGD,aAAa,CAACE,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;IACjD,oBACE;MACE,GAAG,EAAEA,KAAM;MACX,SAAS,EAAEvC,EAAE,CACXgB,MAAM,GAAG,cAAc,GAAG,OAAO,EACjCsB,KAAK,CAAC7B,KAAK,CAAC+B,SAAS;IACrB,gBAEDpC,YAAY,CAACkC,KAAK,EAAE;MACnBxB,IAAI,EAAEA,IAAI;MACVD,KAAK,EAAEyB,KAAK,CAAC7B,KAAK,CAACI,KAAK,IAAIA,KAAK;MACjCD,IAAI,EAAKsB,KAAK,SAAIK,KAAO;MACzB5B,QAAQ,EAAEe,SAAS;MACnBE,OAAO,EAAE,CAACH,OAAO,IAAI,EAAE,EAAEgB,QAAQ,CAACH,KAAK,CAAC7B,KAAK,CAACQ,KAAK;IACrD,CAAC,CAAC,CACE;EAEV,CAAC,CAAC;EAEF,oBACE;IAAK,IAAI,EAAC,OAAO;IAAC,GAAG,EAAEP;EAAI,GAAKU,IAAI,GACjCgB,MAAM,CACH;AAEV,CAAC,CACF;AAED,IAAIlC,OAAO,EAAE;EACXK,aAAa,CAACmC,WAAW,GAAG,eAAe;AAC7C"}